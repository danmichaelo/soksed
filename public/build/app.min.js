angular.module("app",["ngSanitize","infinite-scroll","cfp.hotkeys","ui.router","app.controllers.user","app.controllers.users","app.controllers.concept","app.controllers.concepts","app.controllers.auth","app.services.user","app.services.backend","app.services.auth","app.services.concepts","app.services.concept","app.services.state","app.directives.altlabels","app.directives.conceptnav"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$logProvider","hotkeysProvider",function(e,t,n,o,r){"use strict";o.debugEnabled(!0),r.includeCheatSheet=!0;var c={"^REAL([0-9]+)$":"http://data.ub.uio.no/realfagstermer/c"};e.state("concepts",{url:"/concepts",templateUrl:"partials/concepts.html",needsPermission:"edit",controller:"ConceptsController"}).state("concepts.concept",{url:"/:id?view",templateUrl:function(e){return"/partials/concept."+(e.view?e.view:"default")+".html"},controller:"ConceptController",resolve:{view:["$stateParams",function(e){var t=e.view;return t}],concept:["$stateParams","Concepts",function(e,t){var n,o=e.id;Object.keys(c).forEach(function(e){var t=o.match(e);t&&(n=c[e]+t[1])});var r=t.getByUri(n);return r||(console.log("[main] Add concept <"+n+">"),r=t.add(o,n)),r}]}}).state("users",{url:"/users",templateUrl:"partials/users.html",controller:"UsersController",needsPermission:"edit",resolve:{users:["$http",function(e){return e({method:"GET",url:"backend.php",params:{action:"get_users"}})}]}}).state("user",{url:"/users/:id",templateUrl:"partials/user.html",controller:"UserController",needsPermission:"view",resolve:{user:["$stateParams","User",function(e,t){return t.get(e.id)}]}}).state("auth",{url:"/auth",templateUrl:"partials/auth.html",controller:"AuthController"}),n.html5Mode(!0)}]).run(["$rootScope","$location","Auth",function(e,t,n){e.$on("$stateChangeStart",function(e,t){console.log("$stateChangeStart: "+t.needsPermission+" : "+(n.hasPermission(t.needsPermission)?"true":"false")),n.hasPermission(t.needsPermission)||(e.preventDefault(),n.isLoggedIn()?$state.go("user",{id:n.getUser().username[0]}):$state.go("auth"))})}]).controller("LoginCtrl",["$scope","$location","$log","$timeout","Auth","Concepts","StateService",function(e,t,n,o,r){"use strict";e.user=r.user,e.$on("userChanged",function(t,n){e.user=n})}]),angular.module("app.controllers.auth",["app.services.auth"]).controller("AuthController",["$scope","Auth",function(){"use strict"}]),angular.module("app.controllers.concept",["app.services.backend","app.services.auth","app.services.state","app.services.concepts"]).controller("ConceptController",["$scope","$window","$log","$timeout","hotkeys","Backend","StateService","Concepts","concept","view",function(e,t,n,o,r,c,s,a,i,l){"use strict";function u(){o(function(){angular.element('.main input[type="text"]:enabled')[0].focus()},0)}console.log("[ConceptController] Init: view="+l+", id="+i.id),s.setConcept(i),s.setView(l),e.currentConcept=i,i.isLoaded()&&u(),e.$on("conceptLoaded",function(){u()}),e.$watch("currentConcept.data",function(t,n){n&&t&&n.uri==t.uri&&e.currentConcept.testDirty()},!0),e.$on("termChanged",function(t,o){n.debug("[main] Term changed: "+o.value),e.currentTerm=o}),e.nb2nn=function(e){return e+"a"},e.selectHint=function(t){n.debug(t),e.currentConcept.data.prefLabel.nn[0].value=t},e.submit=function(){e.currentConcept.dirty&&e.currentConcept.store(),a.next()},e.reload=function(){n.debug("[main] Reload concept"),e.currentConcept.load(!0)},r.bindTo(e).add({combo:"alt+s",description:"Lagre og hopp til neste",callback:function(t){t.preventDefault(),e.submit()},allowIn:["INPUT"]}).add({combo:"alt+down",description:"Hopp til neste",callback:function(e){e.preventDefault(),a.next()},allowIn:["INPUT"]}).add({combo:"alt+up",description:"Hopp til forrige",callback:function(e){e.preventDefault(),a.prev()},allowIn:["INPUT"]})}]),angular.module("app.controllers.concepts",["app.services.backend"]).controller("ConceptsController",["$scope","$state","Backend","StateService",function(e,t,n,o){"use strict";function r(t){if(t)for(var n=e.views.length-1;n>=0;n--)if(e.views[n].name==t){e.selectedView=e.views[n];break}}var c="default";console.log("+++ ConceptsController:init, view: "+c),e.selectedLanguages=n.config.languages,e.views=[{id:1,name:"default",label:"Standard"},{id:2,name:"nn",label:"Nynorsk-oversettelse"}],r(o.getView()),e.$on("viewChanged",function(e,t){r(t)}),e.$watch("selectedView",function(e,n){n&&e&&n!=e&&t.go("concepts.concept",{view:e.name})}),e.$on("conceptChanged",function(t,n){console.log("[ConceptsController] Concept changed: "+n.uri),e.currentConcept=n})}]),angular.module("app.controllers.user",["app.services.auth"]).controller("UserController",["$scope","user",function(e,t){"use strict";console.log(t),e.user=t.data.user}]),angular.module("app.controllers.users",["app.services.backend","app.services.auth","app.services.state","app.services.concepts"]).controller("UsersController",["$scope","users",function(e,t){"use strict";console.log(t),e.users=t.data.users}]),angular.module("app.services.auth",["ngCookies","app.services.backend"]).service("Auth",["$rootScope","$cookieStore",function(e,t){"use strict";console.log("User-cookie: "),console.log(t.get("user"));var n=t.get("user")||{username:"",permission:[]};this.user=n;var o=this;this.hasPermission=function(e){return e?"view"==e?o.isLoggedIn():o.user.permission[e]?!0:!1:!0},this.isLoggedIn=function(e){return void 0===e&&(e=o.user),e.created},this.user=n}]),angular.module("app.services.backend",[]).service("Backend",["$rootScope","$http",function(e,t){"use strict";function n(e,n){return n||(n={}),n.action=e,t({method:"GET",url:"backend.php",params:n})}function o(e,n){return n||(n={}),n.action=e,t({method:"POST",url:"backend.php",data:n})}this.config={languages:["nb","nn","en","la"]},this.getUser=function(e){var t={};return e&&(t.id=e),n("get_user",t)},this.getUsers=function(){return n("get_users")},this.getConcepts=function(e){return n("get_concepts",{filter:e})},this.getConcept=function(e){return n("get_concept",{uri:e})},this.putConcept=function(e){return o("put_concept",{data:e})}}]),angular.module("app.services.concept",["app.services.backend"]).factory("Concept",["$q","$rootScope","$timeout","Backend",function(e,t,n,o){"use strict";function r(e,t,n){var o=this;o.dirty=!1,o.loading=!1,o.saving=!1,o.saved=!1,o.error=null,o.id=e,o.uri=t,o.label=n,o.status="minimal",o.data=null}return r.prototype={constructor:r,isLoaded:function(){return this.data},setData:function(e){e.altLabel&&Object.keys(e.altLabel).length||(e.altLabel={}),o.config.languages.forEach(function(t){e.prefLabel[t]||(e.prefLabel[t]=[{value:""}]),e.altLabel[t]||(e.altLabel[t]=[{value:""}])}),e.prefLabel.nn[0].hints=[],e.prefLabel.nn[0].hints.push(e.prefLabel.nb[0].value);var n=e.prefLabel.nb[0].value.match("^(.*)er$");n&&e.prefLabel.nn[0].hints.push(n[1]+"ar");var r=this.label;this.label=e.prefLabel.nb[0].value,this.data=e,this.originalData=angular.copy(e),r!=this.label&&t.$broadcast("conceptLabelChanged",this);var c=encodeURIComponent(this.label);this.katapiUrl="https://katapi.biblionaut.net/documents?q=real:"+this.label;var s=encodeURIComponent("\n\n\n\n--\nURI: "+this.uri+"\nBruk: "+this.katapiUrl);this.githubUrl="https://github.com/realfagstermer/realfagstermer/issues/new?title="+c+"&body="+s},testDirty:function(){this.dirty=!angular.equals(this.data,this.originalData)},store:function(){var e=this;e.error="",e.saved=!1,e.dirty=!1,this.saving=!0,o.putConcept(this.data).then(function(t){return e.saving=!1,console.log(t),t.data.status?"success"!=t.data.status?void("edit_conflict"==t.data.status?(e.error='Redigeringskonflikt: Begrepet har blitt endret på serveren siden du begynte å redigere. Kopier ulagrede endringer og trykk så "Tilbakestill" (eller last siden på nytt) for å hente inn det oppdaterte begrepet.',alert("Redigeringskonflikt, endringene dine har ikke blitt lagret.")):"no_permission"==t.data.status?(e.error="Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.",alert("Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.")):(e.error=t.data.status,alert("Save failed, see concept for more info."))):(e.saved=!0,void e.load(!0)):(e.error=t.data,void alert("Save failed, see concept for more info."))})},load:function(r){var c=this,s=e.defer();return this.data&&!r?n(function(){s.resolve()},0):(this.loading=!0,o.getConcept(this.uri).success(function(e){return c.loading=!1,e.concept?(c.setData(e.concept),c.error=null,console.log("[Concept] Concept loaded: "+e.concept.uri),console.log(c.data),t.$broadcast("conceptLoaded",c),void s.resolve()):(c.error=e.error?e.error:e,void s.reject())}).error(function(){c.loading=!1,c.error="Load failed. Server or network problems.",s.reject()})),s.promise},toJson:function(){var e={},t=this;return Object.keys(this).forEach(function(n){"originalData"!=n&&(e[n]=t[n])}),JSON.stringify(e)}},r}]),angular.module("app.services.concepts",["app.services.backend","app.services.concept"]).service("Concepts",["$rootScope","$q","$timeout","$state","Backend","Concept",function(e,t,n,o,r,c){"use strict";function s(t){a||(t!=u&&(i.concepts=[],u=t),console.log("[Concepts] fetchConcepts"),a=!0,r.getConcepts(t).success(function(t){return a=!1,t.concepts?(i.count=t.count,i.cursor=t.cursor,t.concepts.forEach(function(e){i.getByUri(e.uri)||i.concepts.push(new c(e.id,e.uri,e.label))}),i.sort(),console.log("[Concepts] Fetched"),void e.$broadcast("loadedConcepts",i.concepts)):void console.log("[Concepts] Fetch failed!")}))}var a=!1,i=this,l=null,u=null;this.concepts=[],this.cursor=0,this.count=0,e.$on("conceptChanged",function(e,t){l=t,l.data||l.load()}),e.$on("conceptLabelChanged",function(){console.log("Label changed, re-sort list"),i.sort()}),this.getConcepts=function(){return i.concepts},this.fetch=function(e){s(e)},this.getById=function(e){return i.concepts.reduce(function(t,n){return n.id==e?n:t},null)},this.getByUri=function(e){return i.concepts.reduce(function(t,n){return n.uri==e?n:t},null)},this.sort=function(){i.concepts.sort(function(e,t){return e.label.localeCompare(t.label)})},this.add=function(e,t){var n=new c(e,t,"(...)");return i.concepts.push(n),n},this.show=function(e){o.go("concepts.concept",{id:e.id})},this.next=function(){var e=i.concepts.indexOf(l),t=e+1;t>i.concepts.length-1&&(t=0),i.show(i.concepts[t])},this.prev=function(){var e=i.concepts.indexOf(l),t=e-1;0>t&&(t=i.concepts.length-1),i.show(i.concepts[t])}}]),angular.module("app.services.state",["app.services.concepts"]).service("StateService",["$rootScope","Concepts",function(e){"use strict";var t={concept:null,term:null,view:null};this.setView=function(n){t.view=n,e.$broadcast("viewChanged",t.view)},this.getView=function(){return t.view},this.setConcept=function(n){t.concept=n,e.$broadcast("conceptChanged",t.concept)},this.getConcept=function(){return t.concept},this.setTerm=function(n){t.term=n,e.$broadcast("termChanged",t.term)},this.getTerm=function(){return t.term}}]),angular.module("app.services.user",["app.services.backend"]).factory("User",["$q","$rootScope","$timeout","Backend",function(e,t,n,o){"use strict";function r(){var e=this;e.data=null}return r.prototype={constructor:r,isLoaded:function(){return this.data},setData:function(e){this.data=e}},r.get=function(t){var n=e.defer();return o.getUser(t).then(function(e){console.log(e),n.resolve(e)}),n.promise},r}]),angular.module("app.directives.altlabels",["app.services.state"]).directive("altlabels",["StateService",function(e){return{restrict:"E",templateUrl:"/partials/altlabels.html",replace:!1,scope:{items:"=",lang:"="},link:function(t,n,o){function r(){}t.keydown=function(e){if(13===e.keyCode&&t.items.push({value:""}),40===e.keyCode){var n=$(e.target).parent(),o=n.parent().children("li");if(o.length<=1)return;var r=n.next("li");0===r.length&&(r=$(o[0])),r.find("input").focus()}38===e.keyCode},t.setCurrentTerm=function(n){var o=$(n.target).parent(),r=o.parent().children("li").index(o),c=t.items[r];e.setTerm(c)},o.items?r(o.lang,o.items):n.html("<em>No items provided</em>")}}}]),angular.module("app.directives.conceptnav",["app.services.concepts","app.services.state"]).directive("conceptnav",["StateService","Concepts",function(e,t){return{restrict:"E",templateUrl:"/partials/conceptnav.html",replace:!1,scope:{},link:function(n){console.log(">>> Linking conceptnav"),n.concepts=[],n.busy=!1,n.filter="",n.totalCount=t.count,n.fetchMoreConcepts=function(){t.fetch()},n.$on("loadedConcepts",function(e,o){n.concepts=o,n.totalCount=t.count,n.busy=!1}),n.selectConcept=function(){t.show(this.concept)},n.currentConcept=e.getConcept(),n.$on("conceptChanged",function(e,t){n.currentConcept=t}),n.$watch("filter",function(e){console.log("Selected filter: "+e),t.fetch(e)}),t.fetch()}}}]);