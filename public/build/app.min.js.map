{"version":3,"sources":["app.config.js","main.js","controllers/AuthController.js","controllers/ConceptController.js","controllers/ConceptsController.js","controllers/HeaderController.js","controllers/UserController.js","controllers/UsersController.js","directives/altlabels.js","directives/conceptnav.js","directives/term.js","models/auth.js","models/backend.js","models/concept.js","models/concepts.js","models/state.js","models/user.js"],"names":["angular","module","constant","views","id","name","label","filters","value","graphOption","languages","config","$stateProvider","$urlRouterProvider","$locationProvider","$logProvider","hotkeysProvider","debugEnabled","includeCheatSheet","defaultView","urimap","^REAL([0-9]+)$","tplVersion","state","url","templateUrl","needsPermission","controller","$stateParams","view","resolve","concept","Concepts","uri","Object","keys","forEach","k","m","match","getByUri","add","users","$http","method","params","action","user","User","get","returnTo","html5Mode","run","$rootScope","$location","$state","Auth","$on","event","toState","toParams","console","log","hasPermission","preventDefault","href","isLoggedIn","go","username","$scope","window","encodeURIComponent","$window","$log","$timeout","hotkeys","Backend","StateService","setFocus","field","element","length","focus","setConcept","setView","currentConcept","isLoaded","$watch","c","p","testDirty","store","dirty","storeAndGo","next","reload","debug","load","keyboardModifier","navigator","platform","bindTo","combo","description","callback","allowIn","prev","open","katapiUrl","i","selectedView","filterobj","q","split","filterKeys","map","x","f","indexOf","undefined","select","local","query","selectedLanguages","getView","evt","getConcept","menuAvailable","toggleMenu","toggleClass","e","data","directive","restrict","replace","scope","items","originalItems","lang","disabled","link","attrs","bind","keydown","keyCode","push","$li","$","target","parent","$lis","children","$next","find","setCurrentTerm","idx","index","term","setTerm","markReviewed","alert","html","concepts","busy","totalCount","count","fetchMoreConcepts","fetch","setTimeout","checkScrollPos","selectConcept","show","this","y","first","height","ctop","cbottom","wtop","scrollTop","wbottom","graphOptionEnabled","submit","filterString","join","transclude","originalData","readonly","cont","$parent","confirm","then","$term","$terms","service","$cookieStore","currentUser","permission","that","created","getRequest","postRequest","getUser","opts","getUsers","getConcepts","cursor","filter","putConcept","factory","$q","Concept","loading","saving","saved","error","status","prototype","constructor","setData","editorialNote","altLabel","lng","prefLabel","ensureBlankFields","generateHints","oldLabel","nb","copy","$broadcast","subject","body","githubUrl","equals","nn","hints","Math","min","slice","response","err","message","force","deferred","defer","success","reject","promise","toJson","JSON","stringify","currentFilter","results","getById","reduce","sort","a","b","localeCompare","currentConceptIdx","n","getTerm"],"mappings":"AAIAA,QAAAC,OAAA,iBACAC,SAAA,UACAC,QACAC,GAAA,EAAAC,KAAA,UAAAC,MAAA,aACAF,GAAA,EAAAC,KAAA,KAAAC,MAAA,0BAEAC,UACAC,MAAA,GAAAF,MAAA,mBACAE,MAAA,iBAAAF,MAAA,uBACAE,MAAA,sBAAAF,MAAA,oBAAAG,aAAA,IACAD,MAAA,uBAAAF,MAAA,0BACAE,MAAA,oBAAAF,MAAA,YAAAG,aAAA,IAEAC,WAAA,KAAA,KAAA,KAAA,QCfAV,QAAAC,OAAA,OAAA,aACA,YACA,cACA,YACA,iBAEA,aACA,yBACA,uBACA,wBACA,0BACA,2BACA,uBAEA,oBACA,uBACA,oBACA,wBACA,uBACA,qBAEA,2BACA,8BAGAU,QAAA,iBAAA,qBAAA,oBAAA,eAAA,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,YAEAD,GAAAE,cAAA,GACAD,EAAAE,mBAAA,CAGA,IAAAC,GAAA,KAKAC,GACAC,iBAAA,0CAGAC,EAAA,QAEAV,GACAW,MAAA,QACAC,IAAA,IACAC,YAAA,qBAAAH,IAEAC,MAAA,YACAC,IAAA,cACAC,YAAA,yBAAAH,EACAI,gBAAA,OACAC,WAAA,uBAEAJ,MAAA,oBACAG,gBAAA,OACAF,IAAA,YACAC,YAAA,SAAAG,GACA,MAAA,sBAAAA,EAAAC,KAAAD,EAAAC,KAAAV,GAAA,QAAAG,GAEAK,WAAA,oBACAG,SAIAD,MAAA,eAAA,SAAAD,GACA,GAAAC,GAAAD,EAAAC,KAAAD,EAAAC,KAAAV,CACA,OAAAU,KAEAE,SAAA,eAAA,WAAA,SAAAH,EAAAI,GACA,GAEAC,GAFA7B,EAAAwB,EAAAxB,EAGA8B,QAAAC,KAAAf,GAAAgB,QAAA,SAAAC,GACA,GAAAC,GAAAlC,EAAAmC,MAAAF,EACAC,KAAAL,EAAAb,EAAAiB,GAAAC,EAAA,KAEA,IAAAP,GAAAC,EAAAQ,SAAAP,EAKA,OAJAF,KACAA,EAAAC,EAAAS,IAAArC,EAAA6B,IAGAF,OAMAR,MAAA,SACAC,IAAA,SACAC,YAAA,sBAAAH,EACAK,WAAA,kBACAD,gBAAA,OACAI,SACAY,OAAA,QAAA,SAAAC,GACA,MAAAA,IAAAC,OAAA,MAAApB,IAAA,UAAAqB,QAAAC,OAAA,oBAIAvB,MAAA,QACAC,IAAA,aACAC,YAAA,qBAAAH,EACAK,WAAA,iBACAD,gBAAA,OACAI,SACAiB,MAAA,eAAA,OAAA,SAAAnB,EAAAoB,GACA,MAAAA,GAAAC,IAAArB,EAAAxB,SAIAmB,MAAA,QACAC,IAAA,iBACAC,YAAA,qBAAAH,EACAK,WAAA,iBACAG,SACAoB,UAAA,eAAA,SAAAtB,GACA,MAAAA,GAAAsB,cAMApC,EAAAqC,WAAA,MAIAC,KAAA,aAAA,YAAA,SAAA,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,YAEAH,GAAAI,IAAA,oBAAA,SAAAC,EAAAC,EAAAC,GAEA,GADAC,QAAAC,IAAA,2BAAAH,EAAAjC,gBAAA,mBAAA8B,EAAAO,cAAAJ,EAAAjC,iBAAA,MAAA,QACA8B,EAAAO,cAAAJ,EAAAjC,iBAAA,CACAgC,EAAAM,gBACA,IAAAxC,GAAA+B,EAAAU,KAAAN,EAAAC,EACAJ,GAAAU,aACAX,EAAAY,GAAA,QAAA/D,GAAAoD,EAAAT,KAAAqB,SAAA,KAEAb,EAAAY,GAAA,QAAAjB,SAAA1B,UCzIAxB,QAAAC,OAAA,wBAAA,sBAEA0B,WAAA,kBAAA,SAAA,OAAA,WAAA,SAAA0C,EAAAb,EAAAN,GACA,YAEAmB,GAAAnB,SAAAoB,OAAAC,mBAAArB,MCLAlD,QAAAC,OAAA,2BAAA,uBACA,oBACA,qBACA,0BAEA0B,WAAA,qBAAA,SAAA,UAAA,OAAA,WAAA,UAAA,UACA,eAAA,WAAA,UAAA,OACA,SAAA0C,EAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAA7C,EAAAD,EAAAF,GACA,YAWA,SAAAiD,KACAJ,EAAA,WACA,GAAAK,GAAA/E,QAAAgF,QAAA,mCACAD,GAAAE,QAAAF,EAAA,GAAAG,SACA,GAbArB,QAAAC,IAAA,kCAAAjC,EAAA,QAAAE,EAAA3B,IACAyE,EAAAM,WAAApD,GACA8C,EAAAO,QAAAvD,GACAwC,EAAAgB,eAAAtD,EAaAA,EAAAuD,YACAR,IAEAT,EAAAZ,IAAA,gBAAA,WACAqB,MAOAT,EAAAkB,OAAA,sBAAA,SAAAC,EAAAC,GACAA,GAAAD,GACAC,EAAAxD,KAAAuD,EAAAvD,KACAoC,EAAAgB,eAAAK,cACA,GAMArB,EAAAsB,MAAA,WACAtB,EAAAgB,eAAAO,OACAvB,EAAAgB,eAAAM,SAIAtB,EAAAwB,WAAA,WACAxB,EAAAsB,QACA3D,EAAA8D,QAGAzB,EAAA0B,OAAA,WACAtB,EAAAuB,MAAA,yBACA3B,EAAAgB,eAAAY,MAAA,GAWA,IAAAC,GAAA,KACA,aAAAC,UAAAC,WACAF,EAAA,QAGAvB,EAAA0B,OAAAhC,GACA5B,KACA6D,MAAAJ,EAAA,KACAK,YAAA,0BACAC,SAAA,SAAA9C,GACAA,EAAAM,iBACAK,EAAAwB,cAEAY,SAAA,WAEAhE,KACA6D,MAAAJ,EAAA,WACAK,YAAA,QACAC,SAAA,SAAA9C,GACAA,EAAAM,iBACAK,EAAAsB,SAEAc,SAAA,WAEAhE,KACA6D,MAAAJ,EAAA,QACAK,YAAA,iBACAC,SAAA,SAAA9C,GACAA,EAAAM,iBACAhC,EAAA8D,QAEAW,SAAA,WAEAhE,KACA6D,MAAAJ,EAAA,MACAK,YAAA,mBACAC,SAAA,SAAA9C,GACAA,EAAAM,iBACAhC,EAAA0E,QAEAD,SAAA,WAEAhE,KACA6D,MAAAJ,EAAA,KACAK,YAAA,oBACAC,SAAA,SAAA9C,GACAA,EAAAM,iBACAM,OAAAqC,KAAAtC,EAAAgB,eAAAuB,UAAA,WAEAH,SAAA,cCzHAzG,QAAAC,OAAA,4BAAA,aAAA,yBAEA0B,WAAA,sBAAA,SAAA,SAAA,eAAA,UAAA,eAAA,SACA,SAAA0C,EAAAd,EAAA3B,EAAAgD,EAAAC,EAAAlE,GACA,YA0BA,SAAAyE,GAAAvD,GACA,GAAAA,EACA,IAAA,GAAAgF,GAAAxC,EAAAlE,MAAA8E,OAAA,EAAA4B,GAAA,EAAAA,IACA,GAAAxC,EAAAlE,MAAA0G,GAAAxG,MAAAwB,EAAA,CACAwC,EAAAyC,aAAAzC,EAAAlE,MAAA0G,EACA,QA7BAhD,QAAAC,IAAA,4BAGAO,EAAA0C,aACAnF,EAAAoF,GACApF,EAAAoF,EAAAC,MAAA,KAAA7E,QAAA,SAAAqD,GACA,GAAAyB,GAAAvG,EAAAJ,QAAA4G,IAAA,SAAAC,GAAA,MAAAA,GAAA5G,QACA6G,EAAA1G,EAAAJ,QAAA2G,EAAAI,QAAA7B,GACA8B,UAAAF,EACAhD,EAAA0C,UAAAS,OAAAH,EACA5B,EAAAlD,MAAA,iBACA8B,EAAA0C,UAAAU,OAAA,EAEApD,EAAA0C,UAAAW,MAAAjC,IAIApB,EAAA0C,UAAAS,SACAnD,EAAA0C,UAAAS,OAAA7G,EAAAJ,QAAA,IAGA8D,EAAAsD,kBAAAhH,EAAAD,UACA2D,EAAAlE,MAAAQ,EAAAR,MAYAiF,EAAAP,EAAA+C,WAEAvD,EAAAZ,IAAA,cAAA,SAAAoE,EAAAhG,GACAuD,EAAAvD,KAIAwC,EAAAkB,OAAA,eAAA,SAAAC,EAAAC,GACAA,GAAAD,GACAC,GAAAD,GAEAjC,EAAAY,GAAA,oBAAAtC,KAAA2D,EAAAnF,SAIAgE,EAAAgB,eAAAR,EAAAiD,aAEAzD,EAAAZ,IAAA,iBAAA,SAAAoE,EAAA9F,GACA8B,QAAAC,IAAA,yCAAA/B,EAAAE,KAEAoC,EAAAgB,eAAAtD,OC3DA/B,QAAAC,OAAA,0BAAA,sBAEA0B,WAAA,oBAAA,SAAA,OAAA,SAAA0C,EAAAb,GACA,YAGAa,GAAA0D,eAAA,EAEA1D,EAAA2D,WAAA,WACAhI,QAAAgF,QAAA,QAAAiD,YAAA,gBAGA5D,EAAAtB,KAAAS,EAAAT,KACAsB,EAAAZ,IAAA,cAAA,SAAAyE,EAAAnF,GACAsB,EAAAtB,KAAAA,OCfA/C,QAAAC,OAAA,wBAAA,sBAEA0B,WAAA,kBAAA,SAAA,OAAA,SAAA0C,EAAAtB,GACA,YAEAc,SAAAC,IAAAf,GACAsB,EAAAtB,KAAAA,EAAAoF,KAAApF,QCNA/C,QAAAC,OAAA,yBAAA,uBACA,oBACA,qBACA,0BAEA0B,WAAA,mBAAA,SAAA,QAAA,SAAA0C,EAAA3B,GACA,YAEAmB,SAAAC,IAAApB,GAEA2B,EAAA3B,MAAAA,EAAAyF,KAAAzF,SCXA1C,QAAAC,OAAA,4BAAA,uBAEAmI,UAAA,aAAA,eAAA,SAAAvD,GACA,YAEA,QAEAwD,SAAA,IACA5G,YAAA,2BACA6G,SAAA,EACAC,OAAAC,MAAA,IAAAC,cAAA,IAAAC,KAAA,IAAAC,SAAA,KAEAC,KAAA,SAAAL,EAAAvD,EAAA6D,GAsCA,QAAAC,MAlCAP,EAAAQ,QAAA,SAAAlB,GAMA,GAHA,KAAAA,EAAAmB,SACAT,EAAAC,MAAAS,MAAAzI,MAAA,KAEA,KAAAqH,EAAAmB,QAAA,CAEA,GAAAE,GAAAC,EAAAtB,EAAAuB,QAAAC,SACAC,EAAAJ,EAAAG,SAAAE,SAAA,KACA,IAAAD,EAAArE,QAAA,EAAA,MACA,IAAAuE,GAAAN,EAAApD,KAAA,KAEA,KAAA0D,EAAAvE,SAAAuE,EAAAL,EAAAG,EAAA,KACAE,EAAAC,KAAA,SAAAvE,QAGA,KAAA2C,EAAAmB,SAKAT,EAAAmB,eAAA,SAAA7B,GACA,GAAAqB,GAAAC,EAAAtB,EAAAuB,QAAAC,SACAM,EAAAT,EAAAG,SAAAE,SAAA,MAAAK,MAAAV,GACAW,EAAAtB,EAAAC,MAAAmB,EACA9E,GAAAiF,QAAAD,IAGAtB,EAAAwB,aAAA,SAAA9H,GACA4B,QAAAC,IAAA,kBAAA7B,GACAqC,OAAA0F,MAAA,oBAUAnB,EAAAL,MACAM,EAAAD,EAAAH,KAAAG,EAAAL,OAEAxD,EAAAiF,KAAA,mCC5DAjK,QAAAC,OAAA,6BAAA,aAAA,wBAAA,uBAEAmI,UAAA,cAAA,SAAA,YAAA,UAAA,eAAA,WAAA,SAAA,SAAA7E,EAAAD,EAAAqB,EAAAE,EAAA7C,EAAArB,GACA,YAEA,QAEA0H,SAAA,IACA5G,YAAA,4BACA6G,SAAA,EACAC,OACAxB,UAAA,KAGA6B,KAAA,SAAAL,GAGA1E,QAAAC,IAAA,0BACAyE,EAAAhI,QAAAI,EAAAJ,QACAgI,EAAA2B,YACA3B,EAAA4B,MAAA,EACA5B,EAAA6B,WAAApI,EAAAqI,MAEA1F,EAAA0B,OAAAkC,GACA9F,KACA6D,MAAA,IACAC,YAAA,MACAC,SAAA,SAAA9C,GACAA,EAAAM,iBACAmF,EAAA,0BAAAjE,WAIAqD,EAAA+B,kBAAA,WAEAzG,QAAAC,IAAA,cACA9B,EAAAuI,SAGAhC,EAAA9E,IAAA,iBAAA,SAAAoE,EAAAqC,GACA3B,EAAA2B,SAAAA,EACA3B,EAAA6B,WAAApI,EAAAqI,MACA9B,EAAA4B,MAAA,EACAK,WAAA,WACAjC,EAAAkC,eAAAlC,EAAAlD,oBAQAkD,EAAAmC,cAAA,WAEA1I,EAAA2I,KAAAC,KAAA7I,UAGAwG,EAAAlD,eAAAR,EAAAiD,aAEAS,EAAAkC,eAAA,SAAA1I,GAEA,GAAA8I,GAAA1B,EAAA,oBAAAI,WAAAuB,QAAAC,SACApB,EAAApB,EAAA2B,SAAA5C,QAAAvF,GACAiJ,EAAArB,EAAAkB,EACAI,EAAAD,EAAAH,EACAK,EAAA/B,EAAA,oBAAAgC,YACAC,EAAAF,EAAA/B,EAAA,oBAAA4B,QAEA,MAAApB,GACA5H,IAEAkJ,GAAAG,EACAjC,EAAA,oBAAAgC,UAAAF,EAAA9B,EAAA,oBAAA4B,UACAG,GAAAF,GACA7B,EAAA,oBAAAgC,UAAAH,KAIAzC,EAAA9E,IAAA,iBAAA,SAAAoE,EAAA9F,GACAwG,EAAAlD,eAAAtD,EACAwG,EAAAkC,eAAA1I,KAGAwG,EAAA8C,mBAAA,WACA,MAAA9C,GAAAxB,UAAAS,QAAAe,EAAAxB,UAAAS,OAAA/G,aAGA8H,EAAA+C,OAAA,WACA,GAAAC,KACAhD,GAAAxB,UAAAW,OAAA6D,EAAAtC,KAAAV,EAAAxB,UAAAW,OACAa,EAAAxB,UAAAS,QAAA+D,EAAAtC,KAAAV,EAAAxB,UAAAS,OAAAhH,OACA+H,EAAA8C,sBAAA9C,EAAAxB,UAAAU,OAAA8D,EAAAtC,KAAA,eACApF,QAAAC,IAAAyH,GAEAhI,EAAAY,GAAA,oBAAA6C,EAAAuE,EAAAC,KAAA,OAGA,IAAAxE,KACAuB,GAAAxB,UAAAW,OACAV,EAAAiC,KAAAV,EAAAxB,UAAAW,OAEAa,EAAAxB,UAAAS,QACAR,EAAAiC,KAAAV,EAAAxB,UAAAS,OAAAhH,OAEA+H,EAAAxB,UAAAU,OACAT,EAAAiC,KAAA,eAGAjC,EAAAA,EAAAwE,KAAA,KACA3H,QAAAC,IAAAkD,GACAuB,EAAA4B,MAAA,EACAnI,EAAAuI,MAAAvD,QC/GAhH,QAAAC,OAAA,uBAAA,qBAAA,yBAEAmI,UAAA,QAAA,eAAA,UAAA,SAAAvD,EAAAD,GACA,YAEA,QAEAyD,SAAA,IACAoD,YAAA,EACAhK,YAAA,sBACA6G,SAAA,EACAC,OAAAJ,KAAA,IAAAuD,aAAA,IAAAC,SAAA,KAEA/C,KAAA,SAAAL,GAIAA,EAAAwB,aAAA,WACA,GAAA6B,IAAA,CAEArD,GAAAsD,QAAAxG,eAAAO,QACAgG,EAAAtH,OAAAwH,QAAA,4EAEAF,GACAhH,EAAAmF,aAAAxB,EAAAmD,aAAAzJ,KAAA8J,KAAA,WAEAxD,EAAAsD,QAAA9F,YAIAwC,EAAAQ,QAAA,SAAAlB,GAKA,GAHA,KAAAA,EAAAmB,QAGA,KAAAnB,EAAAmB,SAAA,KAAAnB,EAAAmB,QAAA,CACA,GAEAQ,GAFAwC,EAAA7C,EAAAtB,EAAAuB,QAAAC,SACA4C,EAAAD,EAAA3C,SAAAE,SAAA,OAGA,IAAA0C,EAAAhH,QAAA,EAAA,MAEA,KAAA4C,EAAAmB,SACAQ,EAAAwC,EAAAlG,KAAA,QACA,IAAA0D,EAAAvE,SAAAuE,EAAAL,EAAA8C,EAAA,OAEAzC,EAAAwC,EAAAtF,KAAA,QACA,IAAA8C,EAAAvE,SAAAuE,EAAAL,EAAA8C,EAAAA,EAAAhH,OAAA,MAEAuE,EAAAC,KAAA,SAAAvE,UAIAqD,EAAArD,MAAA,SAAA2C,GACAhD,EAAAiF,QAAAvB,EAAAJ,MACAgB,EAAAtB,EAAAuB,QAAA5B,eCtDAxH,QAAAC,OAAA,qBAAA,YAAA,yBAEAiM,QAAA,QAAA,aAAA,eAAA,SAAA7I,EAAA8I,GACA,YAEA,IAAAC,GAAAD,EAAAlJ,IAAA,UAAAmB,SAAA,GAAAiI,cAEAzB,MAAA7H,KAAAqJ,CACA,IAAAE,GAAA1B,IAEAA,MAAA7G,cAAA,SAAAsI,GACA,MAAAA,GACA,QAAAA,EAAAC,EAAApI,aACA,IAAAoI,EAAAvJ,KAAAsJ,WAAA/E,QAAA+E,IAAA,GAAA,GAFA,GAKAzB,KAAA1G,WAAA,SAAAnB,GAGA,MAFAwE,UAAAxE,IACAA,EAAAuJ,EAAAvJ,MACAA,EAAAwJ,SAGA3B,KAAA7H,KAAAqJ,KCtBApM,QAAAC,OAAA,2BAEAiM,QAAA,WAAA,aAAA,QAAA,SAAA7I,EAAAV,GACA,YAGA,SAAA6J,GAAA5J,EAAAC,GAGA,MAFAA,KAAAA,MACAA,EAAAC,OAAAF,EACAD,GACAC,OAAA,MACApB,IAAA,UACAqB,OAAAA,IAIA,QAAA4J,GAAA7J,EAAAuF,GAGA,MAFAA,KAAAA,MACAA,EAAArF,OAAAF,EACAD,GACAC,OAAA,OACApB,IAAA,UACA2G,KAAAA,IAIAyC,KAAA8B,QAAA,SAAAtM,GACA,GAAAuM,KAEA,OADAvM,KAAAuM,EAAAvM,GAAAA,GACAoM,EAAA,WAAAG,IAGA/B,KAAAgC,SAAA,WACA,MAAAJ,GAAA,cAGA5B,KAAAiC,YAAA,SAAAC,EAAAC,GACA,MAAAP,GAAA,gBAAAM,OAAAA,EAAAC,OAAAA,KAGAnC,KAAA9C,WAAA,SAAA7F,GACA,MAAAuK,GAAA,eAAAvK,IAAAA,KAGA2I,KAAAoC,WAAA,SAAA7E,GACA,MAAAsE,GAAA,eAAAtE,KAAAA,KAGAyC,KAAAb,aAAA,SAAA9H,GACA,MAAAwK,GAAA,iBAAAxK,IAAAA,QCjDAjC,QAAAC,OAAA,wBAAA,aAAA,uBAAA,2BAAA,wBAEAgN,QAAA,WAAA,KAAA,aAAA,WAAA,UAAA,SAAA,SAAAC,EAAA7J,EAAAqB,EAAAE,EAAAjE,GACA,YAEA,SAAAwM,GAAA/M,EAAA6B,EAAA3B,GACA,GAAAgM,GAAA1B,IACA0B,GAAA1G,OAAA,EACA0G,EAAAc,SAAA,EACAd,EAAAe,QAAA,EACAf,EAAAgB,OAAA,EACAhB,EAAAiB,MAAA,KACAjB,EAAAlM,GAAAA,EACAkM,EAAArK,IAAAA,EACAqK,EAAAhM,MAAAA,EACAgM,EAAAkB,OAAA,UACAlB,EAAAnE,KAAA,KAoLA,MAjLAgF,GAAAM,WAEAC,YAAAP,EAEA7H,SAAA,WACA,MAAAsF,MAAAzC,MAGAwF,QAAA,SAAAxF,GAEAA,EAAAyF,cAEAzF,EAAAyF,cAAA,GAAAjC,UACAxD,EAAAyF,cAAA3E,MAAAzI,MAAA,KAFA2H,EAAAyF,gBAAApN,MAAA,KAKA2H,EAAA0F,UAAA3L,OAAAC,KAAAgG,EAAA0F,UAAA5I,SAAAkD,EAAA0F,aACAlN,EAAAD,UAAA0B,QAAA,SAAA0L,GAGA3F,EAAA4F,UAAAD,KAAA3F,EAAA4F,UAAAD,KAAAtN,MAAA,MACA2H,EAAA0F,SAAAC,KAAA3F,EAAA0F,SAAAC,KAAAtN,MAAA,QAEAoK,KAAAoD,kBAAA7F,GACAyC,KAAAqD,cAAA9F,EAEA,IAAA+F,GAAAtD,KAAAtK,KACAsK,MAAAtK,MAAA6H,EAAA4F,UAAAI,GAAA,GAAA3N,MACAoK,KAAAzC,KAAAA,EACAyC,KAAAc,aAAA1L,QAAAoO,KAAAjG,GACA+F,GAAAtD,KAAAtK,OACA+C,EAAAgL,WAAA,sBAAAzD,KAGA,IAAA0D,GAAA/J,mBAAAqG,KAAAtK,MACAsK,MAAAhE,UAAA,kDAAAgE,KAAAtK,KACA,IAAAiO,GAAAhK,mBAAA,oBAAAqG,KAAA3I,IAAA,WAAA2I,KAAAhE,UACAgE,MAAA4D,UAAA,qEAAAF,EAAA,SAAAC,GAGA7I,UAAA,WACAkF,KAAAhF,OAAA5F,QAAAyO,OAAA7D,KAAAzC,KAAAyC,KAAAc,cAEAd,KAAAoD,kBAAApD,KAAAzC,OAGA8F,cAAA,SAAA9F,GACA,GAAA7F,EAEA6F,GAAA4F,UAAAW,GAAA,GAAAC,SACAxG,EAAA4F,UAAAI,GAAA,GAAA3N,OACA2H,EAAA4F,UAAAW,GAAA,GAAAC,MAAA1F,KAAAd,EAAA4F,UAAAI,GAAA,GAAA3N,OAEA8B,EAAA6F,EAAA4F,UAAAI,GAAA,GAAA3N,MAAA+B,MAAA,YACAD,GACA6F,EAAA4F,UAAAW,GAAA,GAAAC,MAAA1F,KAAA3G,EAAA,GAAA,KAEA,KAAA,GAAAuE,GAAA,EAAAA,EAAA+H,KAAAC,IAAA1G,EAAA0F,SAAAa,GAAAzJ,OAAAkD,EAAA0F,SAAAM,GAAAlJ,QAAA4B,IACAsB,EAAA0F,SAAAa,GAAA7H,GAAA8H,SACAxG,EAAA0F,SAAAM,GAAAtH,GAAArG,OACA2H,EAAA0F,SAAAa,GAAA7H,GAAA8H,MAAA1F,KAAAd,EAAA0F,SAAAM,GAAAtH,GAAArG,OAEA8B,EAAA6F,EAAA0F,SAAAM,GAAAtH,GAAArG,MAAA+B,MAAA,YACAD,GACA6F,EAAA0F,SAAAa,GAAA7H,GAAA8H,MAAA1F,KAAA3G,EAAA,GAAA,OASA0L,kBAAA,SAAA7F,GACA,GAAAmE,GAAA1B,IACAjK,GAAAD,UAAA0B,QAAA,SAAA0L,IAKA,IAAA3F,EAAA0F,SAAAC,GAAA7I,QAAA,KAAAkD,EAAA0F,SAAAC,GAAA3F,EAAA0F,SAAAC,GAAA7I,OAAA,GAAAzE,SACA2H,EAAA0F,SAAAC,GAAA7E,MAAAzI,MAAA,KACA8L,EAAA2B,cAAA9F,IAGAA,EAAA0F,SAAAC,GAAA7I,QAAA,GAAA,KAAAkD,EAAA0F,SAAAC,GAAA3F,EAAA0F,SAAAC,GAAA7I,OAAA,GAAAzE,OAAA,KAAA2H,EAAA0F,SAAAC,GAAA3F,EAAA0F,SAAAC,GAAA7I,OAAA,GAAAzE,QACA2H,EAAA0F,SAAAC,GAAA3F,EAAA0F,SAAAC,GAAAgB,MAAA,EAAA3G,EAAA0F,SAAAC,GAAA7I,OAAA,OAMAU,MAAA,WACA,GAAA2G,GAAA1B,IACA0B,GAAAiB,MAAA,GACAjB,EAAAgB,OAAA,EACAhB,EAAA1G,OAAA,EACAgF,KAAAyC,QAAA,EACAzI,EAAAoI,WAAApC,KAAAzC,MAAA4D,KAAA,SAAAgD,GAGA,MAFAzC,GAAAe,QAAA,EACAxJ,QAAAC,IAAAiL,GACAA,EAAA5G,KAAAqF,OAKA,WAAAuB,EAAA5G,KAAAqF,YACA,iBAAAuB,EAAA5G,KAAAqF,QACAlB,EAAAiB,MAAA,mNACAjJ,OAAA0F,MAAA,gEACA,iBAAA+E,EAAA5G,KAAAqF,QACAlB,EAAAiB,MAAA,wHACAjJ,OAAA0F,MAAA,2HAEAsC,EAAAiB,MAAAwB,EAAA5G,KAAAqF,OACAlJ,OAAA0F,MAAA,8CAIAsC,EAAAgB,OAAA,MACAhB,GAAArG,MAAA,KAlBAqG,EAAAiB,MAAAwB,EAAA5G,SACA7D,QAAA0F,MAAA,8CALApF,SAuBA,SAAAoK,GACA1C,EAAAe,QAAA,EACAxJ,QAAAC,IAAAkL,GACA1C,EAAAiB,MAAA,8BAAAyB,EAAAC,QACA3K,OAAA0F,MAAA,mBAIA/D,KAAA,SAAAiJ,GACA,GAAA5C,GAAA1B,KACAuE,EAAAjC,EAAAkC,OA+BA,OA7BAxE,MAAAzC,OAAA+G,EACAxK,EAAA,WACAyK,EAAArN,WACA,IAEA8I,KAAAwC,SAAA,EACAxI,EAAAkD,WAAA8C,KAAA3I,KAAAoN,QAAA,SAAAlH,GAEA,MADAmE,GAAAc,SAAA,EACAjF,EAAApG,SASAuK,EAAAqB,QAAAxF,EAAApG,SACAuK,EAAAiB,MAAA,KACA1J,QAAAC,IAAA,6BAAAqE,EAAApG,QAAAE,KACA4B,QAAAC,IAAAwI,EAAAnE,MACA9E,EAAAgL,WAAA,gBAAA/B,OACA6C,GAAArN,YAZAwK,EAAAiB,MADApF,EAAAoF,MACApF,EAAAoF,MAEApF,MAEAgH,GAAAG,YASA/B,MAAA,WACAjB,EAAAc,SAAA,EACAd,EAAAiB,MAAA,2CACA4B,EAAAG,YAGAH,EAAAI,SAGAC,OAAA,WACA,GAAArH,MACAmE,EAAA1B,IAKA,OAJA1I,QAAAC,KAAAyI,MAAAxI,QAAA,SAAAgF,GACA,gBAAAA,IACAe,EAAAf,GAAAkF,EAAAlF,MAEAqI,KAAAC,UAAAvH,KAKAgF,KCpMAnN,QAAAC,OAAA,yBAAA,uBAAA,yBAEAiM,QAAA,YAAA,aAAA,KAAA,WAAA,SAAA,UAAA,UAAA,SAAA7I,EAAA6J,EAAAxI,EAAAnB,EAAAqB,EAAAuI,GACA,YAuBA,SAAA5C,GAAAwC,GACA5C,IAEA4C,GAAA4C,IACArD,EAAApC,YACAyF,EAAA5C,GAGAlJ,QAAAC,IAAA,4BAEAqG,GAAA,EACAvF,EAAAiI,YAAAP,EAAAQ,OAAAC,GAAAsC,QAAA,SAAAO,GAEA,MADAzF,IAAA,EACAyF,EAAA1F,UAKAoC,EAAAjC,MAAAuF,EAAAvF,MACAiC,EAAAjC,OAAAiC,EAAApC,SAAAjF,SACAqH,EAAApC,aAEAoC,EAAAQ,OAAA8C,EAAA9C,OAEA8C,EAAA1F,SAAA9H,QAAA,SAAAL,EAAA4H,GACA2C,EAAAQ,OAAAnD,CAEA2C,GAAA9J,SAAAT,EAAAE,MAGAqK,EAAApC,SAAAjB,KADA5D,GAAAA,EAAApD,KAAAF,EAAAE,IACAoD,EAEA,GAAA8H,GAAApL,EAAA3B,GAAA2B,EAAAE,IAAAF,EAAAzB,UAOAuD,QAAAC,IAAA,0BACAT,GAAAgL,WAAA,iBAAA/B,EAAApC,eA1BArG,SAAAC,IAAA,+BAnCA,GAAAqG,IAAA,EACAmC,EAAA1B,KACAvF,EAAA,KACAsK,EAAA,IAEA/E,MAAAV,YACAU,KAAAkC,OAAA,EACAlC,KAAAP,MAAA,EAEAhH,EAAAI,IAAA,iBAAA,SAAAoE,EAAA9F,GACAsD,EAAAtD,EACAsD,EAAA8C,MACA9C,EAAAY,SAIA5C,EAAAI,IAAA,sBAAA,WACAI,QAAAC,IAAA,iCAgDA8G,KAAAiC,YAAA,WACA,MAAAP,GAAApC,UAGAU,KAAAL,MAAA,SAAAwC,GACAxC,EAAAwC,IAGAnC,KAAAiF,QAAA,SAAAzP,GACA,MAAAkM,GAAApC,SAAA4F,OAAA,SAAArK,EAAAD,GACA,MAAAA,GAAApF,IAAAA,EAAAoF,EAAAC,GACA,OAGAmF,KAAApI,SAAA,SAAAP,GACA,MAAAqK,GAAApC,SAAA4F,OAAA,SAAArK,EAAAD,GACA,MAAAA,GAAAvD,KAAAA,EAAAuD,EAAAC,GACA,OAGAmF,KAAAmF,KAAA,WAEAzD,EAAApC,SAAA6F,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAA1P,MAAA4P,cAAAD,EAAA3P,UAIAsK,KAAAnI,IAAA,SAAArC,EAAA6B,GACA4B,QAAAC,IAAA,mBAAA7B,EAAA,4BAAAqK,EAAApC,SAAAjF,OAAA,aACA,IAAAlD,GAAA,GAAAoL,GAAA/M,EAAA6B,EAAA,QAEA,OADAqK,GAAApC,SAAAjB,KAAAlH,GACAA,GAGA6I,KAAAD,KAAA,SAAA5I,GACAwB,EAAAY,GAAA,oBAAA/D,GAAA2B,EAAA3B,MAGAwK,KAAA9E,KAAA,WACA,GAAAqK,GAAA7D,EAAApC,SAAA5C,QAAAjC,GACA+K,EAAAD,EAAA,CACAC,GAAA9D,EAAApC,SAAAjF,OAAA,IAAAmL,EAAA,GACA9D,EAAA3B,KAAA2B,EAAApC,SAAAkG,KAGAxF,KAAAlE,KAAA,WACA,GAAAyJ,GAAA7D,EAAApC,SAAA5C,QAAAjC,GACA+K,EAAAD,EAAA,CACA,GAAAC,IAAAA,EAAA9D,EAAApC,SAAAjF,OAAA,GACAqH,EAAA3B,KAAA2B,EAAApC,SAAAkG,QCvHApQ,QAAAC,OAAA,sBAAA,0BAEAiM,QAAA,gBAAA,aAAA,WAAA,SAAA7I,GACA,YAEA,IAAA9B,IACAQ,QAAA,KACA8H,KAAA,KACAhI,KAAA,KAGA+I,MAAAxF,QAAA,SAAAvD,GACAA,GAAAN,EAAAM,OACAN,EAAAM,KAAAA,EACAgC,QAAAC,IAAA,sBACAD,QAAAC,IAAAjC,GACAwB,EAAAgL,WAAA,cAAA9M,EAAAM,QAGA+I,KAAAhD,QAAA,WACA,MAAArG,GAAAM,MAGA+I,KAAAzF,WAAA,SAAApD,GACAR,EAAAQ,SAAAA,IACAR,EAAAQ,QAAAA,EACAsB,EAAAgL,WAAA,iBAAA9M,EAAAQ,WAGA6I,KAAA9C,WAAA,WACA,MAAAvG,GAAAQ,SAGA6I,KAAAd,QAAA,SAAAD,GACAtI,EAAAsI,MAAAA,IACAtI,EAAAsI,KAAAA,EACAxG,EAAAgL,WAAA,cAAA9M,EAAAsI,QAGAe,KAAAyF,QAAA,WACA,MAAA9O,GAAAsI,SCxCA7J,QAAAC,OAAA,qBAAA,yBAEAgN,QAAA,QAAA,KAAA,aAAA,WAAA,UAAA,SAAAC,EAAA7J,EAAAqB,EAAAE,GACA,YAEA,SAAA5B,KACA,GAAAsJ,GAAA1B,IACA0B,GAAAnE,KAAA,KA0BA,MAvBAnF,GAAAyK,WAEAC,YAAA1K,EAEAsC,SAAA,WACA,MAAAsF,MAAAzC,MAGAwF,QAAA,SAAAxF,GACAyC,KAAAzC,KAAAA,IAKAnF,EAAAC,IAAA,SAAA7C,GACA,GAAA+O,GAAAjC,EAAAkC,OAKA,OAJAxK,GAAA8H,QAAAtM,GAAA2L,KAAA,SAAA5D,GACAtE,QAAAC,IAAAqE,GACAgH,EAAArN,QAAAqG,KAEAgH,EAAAI,SAGAvM","file":"app.min.js","sourcesContent":["\n/**\n * Config\n */\nangular.module('app.config', [])\n  .constant('config', {\n    views: [\n      {id: 1, name: 'default', label: 'Standard'},\n      {id: 2, name: 'nn', label: 'Omsetjing til nynorsk'},\n    ],\n    filters: [\n      { value:'', label:'(intet filter)' },\n      { value: 'has:unverified', label: 'Ikke korrekturlest' }, \n      { value: 'exists:prefLabel@nn', label: 'Har språk:nynorsk', graphOption: true },\n      { value: '-exists:prefLabel@nn', label: 'Mangler språk:nynorsk' },\n      { value: 'has:editorialNote', label: 'Har noter', graphOption: true }\n     ],\n    languages: ['nb', 'nn', 'en', 'la']\n  });"," \n// Declare app level module which depends on filters, and services\nangular.module('app', ['ngSanitize',\n                       'vs-repeat',\n                       'cfp.hotkeys',\n                       'ui.router',\n                       '720kb.tooltips',\n\n                       'app.config',\n                       'app.controllers.header',\n                       'app.controllers.user',\n                       'app.controllers.users',\n                       'app.controllers.concept',\n                       'app.controllers.concepts',\n                       'app.controllers.auth',\n \n                       'app.services.user',\n                       'app.services.backend',\n                       'app.services.auth',\n                       'app.services.concepts',\n                       'app.services.concept',\n                       'app.services.state',\n\n                       'app.directives.altlabels',\n                       'app.directives.conceptnav'])\n\n\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$logProvider', 'hotkeysProvider', function($stateProvider, $urlRouterProvider, $locationProvider, $logProvider, hotkeysProvider) {\n  'use strict';\n\n  $logProvider.debugEnabled(true);\n  hotkeysProvider.includeCheatSheet = true;\n\n\n  var defaultView = 'nn';\n\n  // For any unmatched url, redirect to /\n  //$urlRouterProvider.otherwise('/concepts');\n\n  var urimap = {\n    '^REAL([0-9]+)$': 'http://data.ub.uio.no/realfagstermer/c'\n  };\n\n  var tplVersion = '?ver=2';  // Increase to purge cache\n\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'partials/home.html' + tplVersion\n    })\n    .state('concepts', {\n      url: '/concepts?q',\n      templateUrl: 'partials/concepts.html' + tplVersion,\n      needsPermission: 'edit',\n      controller: 'ConceptsController'\n    })\n    .state('concepts.concept', {\n      needsPermission: 'edit',\n      url: '/:id?view',\n      templateUrl: function ($stateParams) {\n        return '/partials/concept.' + ($stateParams.view ? $stateParams.view : defaultView) + '.html' + tplVersion;\n      },\n      controller: 'ConceptController',\n      resolve: {\n        // An optional map of dependencies which should be injected into the controller. \n        // If any of these dependencies are promises, the router will wait for them all\n        // to be resolved or one to be rejected before the controller is instantiated.\n        view: ['$stateParams', function ($stateParams) {\n          var view = $stateParams.view ? $stateParams.view : defaultView ;\n          return view;\n        }],\n        concept: ['$stateParams', 'Concepts', function ($stateParams, Concepts) {\n          var id = $stateParams.id;\n\n          var uri;\n          Object.keys(urimap).forEach(function(k) {\n            var m = id.match(k);\n            if (m) uri = urimap[k] + m[1];\n          });\n          var concept = Concepts.getByUri(uri);\n          if (!concept) {\n            concept = Concepts.add(id, uri);\n          }\n          // console.log(concept);\n          return concept;\n          // return Concepts.get([{id: $stateParams.id}]); // Returns promise\n          // return Concepts.getByUri(uri); // returns promise\n        }]\n      }\n    })\n    .state('users', {\n      url: '/users',\n      templateUrl: 'partials/users.html' + tplVersion,\n      controller: 'UsersController',\n      needsPermission: 'edit',\n      resolve: {\n        users: ['$http', function($http) {\n          return $http({ method: 'GET', url: 'api.php', params: {action: 'get_users'} });\n        }]\n      }\n    })\n    .state('user', {\n      url: '/users/:id',\n      templateUrl: 'partials/user.html' + tplVersion,\n      controller: 'UserController',\n      needsPermission: 'view',\n      resolve: {\n        user: ['$stateParams', 'User', function($stateParams, User) {\n          return User.get($stateParams.id);\n        }]\n      }\n    })\n    .state('auth', {\n      url: '/auth?returnTo',\n      templateUrl: 'partials/auth.html' + tplVersion,\n      controller: 'AuthController',\n      resolve: {\n        returnTo: ['$stateParams', function($stateParams) {\n          return $stateParams.returnTo;\n        }]\n      }\n    }) ;\n\n  // use the HTML5 History API\n  $locationProvider.html5Mode(true);\n\n}])\n\n.run(['$rootScope', '$location', '$state', 'Auth', function ($rootScope, $location, $state, Auth) {\n  'use strict';\n\n    $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n      console.log('$stateChangeStart: has \"' + toState.needsPermission + '\" permission ? ' + (Auth.hasPermission(toState.needsPermission) ? 'yes' : 'no'));\n      if (!Auth.hasPermission(toState.needsPermission)) {\n        event.preventDefault();\n        var url = $state.href(toState, toParams);\n        if (Auth.isLoggedIn()) {\n          $state.go('user', { id: Auth.user.username[0] });\n        } else {\n          $state.go('auth', { returnTo: url });\n        }\n      }\n    });\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.auth', ['app.services.auth'])\n\n.controller('AuthController', ['$scope', 'Auth', 'returnTo', function($scope, Auth, returnTo) {\n  'use strict';\n\n  $scope.returnTo = window.encodeURIComponent(returnTo);\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concept', ['app.services.backend',\n                                           'app.services.auth',\n                                           'app.services.state',\n                                           'app.services.concepts'])\n\n.controller('ConceptController', ['$scope', '$window', '$log', '$timeout', 'hotkeys', 'Backend',\n                                  'StateService', 'Concepts', 'concept', 'view',\n                                  function($scope, $window, $log, $timeout, hotkeys, Backend, \n                                           StateService, Concepts, concept, view) {\n  'use strict';\n\n  console.log('[ConceptController] Init: view=' + view + ', id=' + concept.id);\n  StateService.setConcept(concept);\n  StateService.setView(view);\n  $scope.currentConcept = concept;\n\n  //-\n  // Focus first edit field once available\n  //-\n\n  function setFocus () {\n    $timeout(function() {\n      var field = angular.element('.main input[type=\"text\"]:enabled');\n      if (field.length) field[0].focus();\n    }, 0);\n  }\n\n  if (concept.isLoaded()) {\n    setFocus();\n  }\n  $scope.$on('conceptLoaded', function(e, user) {\n    setFocus();\n  });\n\n  //-\n  // Test dirtyness on data change\n  //-\n\n  $scope.$watch('currentConcept.data', function(c, p) {\n    if (!p || !c) return;\n    if (p.uri != c.uri) return;\n    $scope.currentConcept.testDirty();\n  }, true);\n\n  //-\n  // Store\n  //-\n\n  $scope.store = function() {\n    if ($scope.currentConcept.dirty) {\n      $scope.currentConcept.store();\n    }\n  };\n\n  $scope.storeAndGo = function() {\n    $scope.store();\n    Concepts.next();\n  };\n\n  $scope.reload = function() {\n    $log.debug('[main] Reload concept');\n    $scope.currentConcept.load(true);\n  };\n\n\n  //-\n  // Keyboard shortcuts\n  //-\n\n  // when you bind it to the controller's scope, it will automatically unbind\n  // the hotkey when the scope is destroyed (due to ng-if or something that changes the DOM)\n  \n  var keyboardModifier = 'alt';\n  if (navigator.platform == 'MacIntel') {\n    keyboardModifier = 'ctrl';\n  }\n\n  hotkeys.bindTo($scope)\n    .add({\n      combo: keyboardModifier + '+s',\n      description: 'Lagre og hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.storeAndGo();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+shift+s',\n      description: 'Lagre',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.store();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+down',\n      description: 'Hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.next();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+up',\n      description: 'Hopp til forrige',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.prev();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+k',\n      description: 'Vis katalogposter',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        window.open($scope.currentConcept.katapiUrl, 'katapi');\n      },\n      allowIn: ['INPUT']\n    });\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concepts', ['app.config', 'app.services.backend'])\n\n.controller('ConceptsController', ['$scope', '$state', '$stateParams', 'Backend', 'StateService', 'config',\n                                  function($scope, $state, $stateParams, Backend, StateService, config) {\n  'use strict';\n\n  console.log('-- ConceptsController --');\n  // console.log($stateParams);\n\n  $scope.filterobj = {};\n  if ($stateParams.q) {\n    $stateParams.q.split(',').forEach(function(p) {\n      var filterKeys = config.filters.map(function(x) { return x.value; });\n      var f = config.filters[filterKeys.indexOf(p)];\n      if (f !== undefined) {\n        $scope.filterobj.select = f;\n      } else if (p.match('(graph:local)')) {\n        $scope.filterobj.local = true;\n      } else {\n        $scope.filterobj.query = p;\n      }\n    });\n  }\n  if (!$scope.filterobj.select) {\n    $scope.filterobj.select = config.filters[0];\n  }\n\n  $scope.selectedLanguages = config.languages;\n  $scope.views = config.views;\n\n  function setView(view) {\n    if (!view) return;\n    for (var i = $scope.views.length - 1; i >= 0; i--) {\n      if ($scope.views[i].name == view) {\n        $scope.selectedView = $scope.views[i];\n        break;\n      }\n    }\n  }\n\n  setView(StateService.getView());\n\n  $scope.$on('viewChanged', function(evt, view) {\n    setView(view);\n  });\n\n\n  $scope.$watch('selectedView', function(c, p) {\n    if (!p || !c) return;\n    if (p == c) return;\n\n    $state.go('concepts.concept', { view: c.name });\n\n  });\n\n  $scope.currentConcept = StateService.getConcept();\n\n  $scope.$on('conceptChanged', function(evt, concept) {\n    console.log('[ConceptsController] Concept changed: ' + concept.uri);\n    // $log.debug(concept);\n    $scope.currentConcept = concept;\n  });\n\n}]);","/**\n * HeaderController\n */\nangular.module('app.controllers.header', ['app.services.auth'])\n\n.controller('HeaderController', ['$scope', 'Auth', function($scope, Auth){\n  'use strict';\n\n  // TODO: Use Stateservice to determine?\n  $scope.menuAvailable = true;\n\n  $scope.toggleMenu = function() {\n    angular.element('body').toggleClass('menuVisible');\n  };\n\n  $scope.user = Auth.user;\n  $scope.$on('userChanged', function(e, user) {\n    $scope.user = user;\n  });\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.user', ['app.services.auth'])\n\n.controller('UserController', ['$scope', 'user', function($scope, user) {\n  'use strict';\n\n  console.log(user);\n  $scope.user = user.data.user;\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.users', ['app.services.backend',\n                                        'app.services.auth',\n                                        'app.services.state',\n                                        'app.services.concepts'])\n\n.controller('UsersController', ['$scope', 'users', function($scope, users) {\n  'use strict';\n\n  console.log(users);\n\n  $scope.users = users.data.users;\n\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.altlabels', ['app.services.state'])\n\n.directive('altlabels', ['StateService', function (StateService) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/altlabels.html',\n    replace: false,\n    scope: { items: '=', originalItems: '=', lang: '@', disabled: '@' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        // console.log(evt);\n        if (evt.keyCode === 13) { // Enter\n          scope.items.push({value:''});\n        }\n        if (evt.keyCode === 40) {\n          // Down\n          var $li = $(evt.target).parent();\n          var $lis = $li.parent().children('li');\n          if ($lis.length <= 1) return;\n          var $next = $li.next('li');\n          //console.log($next);\n          if ($next.length === 0) $next = $($lis[0]);\n          $next.find('input').focus();\n          //console.log($next.find('input').val());\n        }\n        if (evt.keyCode === 38) {\n          // Up\n        }\n      };\n\n      scope.setCurrentTerm = function(evt) {\n        var $li = $(evt.target).parent();\n        var idx = $li.parent().children('li').index($li);\n        var term = scope.items[idx];\n        StateService.setTerm(term);\n      };\n\n      scope.markReviewed = function(uri) {\n        console.log('Mark reviewed: ' + uri);\n        window.alert('not implemented');\n      };\n\n      function bind(lang, items) {\n        // ?\n      }\n      /*if (attrs.disabled) {\n        scope.disabled = true;\n      }*/\n\n      if (attrs.items) {\n        bind(attrs.lang, attrs.items);\n      } else {\n        element.html('<em>No items provided</em>');\n      }\n\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.conceptnav', ['app.config', 'app.services.concepts', 'app.services.state'])\n\n.directive('conceptnav', ['$state', '$location', 'hotkeys', 'StateService', 'Concepts', 'config', function ($state, $location, hotkeys, StateService, Concepts, config) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/conceptnav.html',\n    replace: false,\n    scope: {\n      'filterobj': '='  // Two-way data binding\n    },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n      console.log('>>> Linking conceptnav');\n      scope.filters = config.filters;\n      scope.concepts = [];\n      scope.busy = true;\n      scope.totalCount = Concepts.count;\n\n      hotkeys.bindTo(scope)\n      .add({\n        combo: '/',\n        description: 'Søk',\n        callback: function(event, hotkey) {\n          event.preventDefault();\n          $('.conceptnav input:text').focus();\n        }\n      });\n\n      scope.fetchMoreConcepts = function() {\n        // called by infinite scroll\n        console.log('FETCH MORE');\n        Concepts.fetch();\n      };\n\n      scope.$on('loadedConcepts', function(evt, concepts) {\n        scope.concepts = concepts;\n        scope.totalCount = Concepts.count;\n        scope.busy = false;\n        setTimeout(function() {\n          scope.checkScrollPos(scope.currentConcept);\n        });\n      });\n\n      function conceptListUpdated() {\n        console.log('conceptListUpdated');\n      }\n\n      scope.selectConcept = function() {\n        // console.log(this.concept);\n        Concepts.show(this.concept);\n      };\n\n      scope.currentConcept = StateService.getConcept();\n\n      scope.checkScrollPos = function(concept) {\n        // All elements have the same height since we are using angular-vs-repeat\n        var y = $('.scrollerwrapper').children().first().height(),\n            idx = scope.concepts.indexOf(concept),\n            ctop = idx * y,\n            cbottom = ctop + y,\n            wtop = $('.scrollerwrapper').scrollTop(),\n            wbottom = wtop + $('.scrollerwrapper').height();\n\n        if (idx === -1) return; \n        if (!concept) return; \n\n        if (cbottom >= wbottom) {\n          $('.scrollerwrapper').scrollTop( cbottom - $('.scrollerwrapper').height() );\n        } else if (ctop <= wtop) {\n          $('.scrollerwrapper').scrollTop( ctop );\n        }\n      };\n\n      scope.$on('conceptChanged', function(evt, concept) {\n        scope.currentConcept = concept;\n        scope.checkScrollPos(concept);\n      });\n\n      scope.graphOptionEnabled = function() {\n        return scope.filterobj.select && scope.filterobj.select.graphOption;\n      };\n\n      scope.submit = function() {\n        var filterString = [];\n        if (scope.filterobj.query) filterString.push(scope.filterobj.query);\n        if (scope.filterobj.select) filterString.push(scope.filterobj.select.value);\n        if (scope.graphOptionEnabled() && scope.filterobj.local) filterString.push('graph:local');\n        console.log(filterString);\n\n        $state.go('concepts.concept', {q: filterString.join(',')});\n      };\n\n      var q = [];\n      if (scope.filterobj.query) {\n        q.push(scope.filterobj.query);\n      }\n      if (scope.filterobj.select) {\n        q.push(scope.filterobj.select.value);\n      }\n      if (scope.filterobj.local) {\n        q.push('graph:local');\n      }\n\n      q = q.join(',');\n      console.log(q);\n      scope.busy = true;\n      Concepts.fetch(q);\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.term', ['app.services.state', 'app.services.backend'])\n\n.directive('term', ['StateService', 'Backend', function (StateService, Backend) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    transclude: true,\n    templateUrl: '/partials/term.html',\n    replace: false,\n    scope: { data: '=', originalData: '=', readonly: '=' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.markReviewed = function() {\n        var cont = true;\n        // TODO: Something more elegant than scope.$parent ?\n        if (scope.$parent.currentConcept.dirty) {\n          cont = window.confirm('Endringer du har gjort på dette begrepet vil gå tapt. Vil du fortsette?');\n        }\n        if (!cont) return;\n        Backend.markReviewed(scope.originalData.uri).then(function(response) {\n          // TODO: Something more elegant than scope.$parent ?\n          scope.$parent.reload();  // Reload to get term URIs etc..\n        });\n      };\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        if (evt.keyCode === 13) { // Enter\n          //scope.$parent.items.push({value:''});\n        }\n        if (evt.keyCode === 40 || evt.keyCode === 38) {\n          var $term = $(evt.target).parent();\n          var $terms = $term.parent().children('term');\n          var $next;\n\n          if ($terms.length <= 1) return;\n          // Down\n          if (evt.keyCode == 40) {\n             $next = $term.next('term');\n            if ($next.length === 0) $next = $($terms[0]);\n          } else {\n            $next = $term.prev('term');\n            if ($next.length === 0) $next = $($terms[$terms.length-1]);\n          }\n          $next.find('input').focus();\n        }\n      };\n\n      scope.focus = function(evt) {\n        StateService.setTerm(scope.data);\n        $(evt.target).select();\n      };\n\n    }\n  };\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.auth', ['ngCookies', 'app.services.backend'])\n\n.service('Auth', ['$rootScope', '$cookieStore', function($rootScope, $cookieStore) {\n  'use strict';\n\n  var currentUser = $cookieStore.get('user') || { username: '', permission: [] };\n\n  this.user = currentUser;\n  var that = this;\n\n  this.hasPermission = function(permission) {\n    if (!permission) return true;\n    if (permission == 'view') return that.isLoggedIn();\n    return that.user.permission.indexOf(permission) != -1 ? true : false;\n  };\n\n  this.isLoggedIn = function(user) {\n    if(user === undefined)\n        user = that.user;\n    return user.created;\n  };\n\n  this.user = currentUser;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.backend', [])\n\n.service('Backend', ['$rootScope', '$http', function($rootScope, $http) {\n  'use strict';\n  // console.log('Backend init');\n\n  function getRequest(method, params) {\n    if (!params) params = {};\n    params.action = method;\n    return $http({\n      method: 'GET',\n      url: 'api.php',\n      params: params\n    });\n  }\n\n  function postRequest(method, data) {\n    if (!data) data = {};\n    data.action = method;\n    return $http({\n      method: 'POST',\n      url: 'api.php',\n      data: data\n    });\n  }\n\n  this.getUser = function(id) {\n    var opts = {};\n    if (id) opts.id = id;\n    return getRequest('get_user', opts);\n  };\n\n  this.getUsers = function() {\n    return getRequest('get_users');\n  };\n\n  this.getConcepts = function(cursor, filter) {\n    return getRequest('get_concepts', {cursor: cursor, filter: filter});\n  };\n\n  this.getConcept = function(uri) {\n    return getRequest('get_concept', {uri: uri});\n  };\n\n  this.putConcept = function(data) {\n    return postRequest('put_concept', {data: data});\n  };\n\n  this.markReviewed = function(uri) {\n    return postRequest('mark_reviewed', {uri: uri});\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.concept', ['app.config', 'app.services.backend', 'app.directives.altlabels', 'app.directives.term'])\n\n.factory('Concept', ['$q', '$rootScope', '$timeout', 'Backend', 'config', function($q, $rootScope, $timeout, Backend, config) {\n  'use strict';\n\n  function Concept(id, uri, label) {\n    var that = this;\n    that.dirty = false;\n    that.loading = false;\n    that.saving = false;\n    that.saved = false;\n    that.error = null;\n    that.id = id;\n    that.uri = uri;\n    that.label = label;\n    that.status = 'minimal';  // 'complete', 'saving', 'saved'\n    that.data = null;\n  }\n\n  Concept.prototype = {\n\n    constructor: Concept,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      // If no (editable) editorialNote field, create one\n      if (!data.editorialNote) {\n        data.editorialNote = [{ value: '' }];\n      } else if (data.editorialNote[0].readonly) {\n        data.editorialNote.push({ value: '' });        \n      }\n\n      if (!data.altLabel || !Object.keys(data.altLabel).length) data.altLabel = {};\n      config.languages.forEach(function(lng) {\n        // There should be at least one text field, so we add\n        // one if there are none.\n        if (!data.prefLabel[lng]) data.prefLabel[lng] = [{ value: '' }];\n        if (!data.altLabel[lng]) data.altLabel[lng] = [{ value: '' }];\n      });\n      this.ensureBlankFields(data);\n      this.generateHints(data);\n\n      var oldLabel = this.label;\n      this.label = data.prefLabel.nb[0].value;\n      this.data = data;\n      this.originalData = angular.copy(data);\n      if (oldLabel != this.label) {\n        $rootScope.$broadcast('conceptLabelChanged', this);\n      }\n\n      var subject = encodeURIComponent(this.label);\n      this.katapiUrl = 'https://katapi.biblionaut.net/documents?q=real:' + this.label;\n      var body = encodeURIComponent('\\n\\n\\n\\n--\\nURI: ' + this.uri + '\\nBruk: ' + this.katapiUrl);\n      this.githubUrl = 'https://github.com/realfagstermer/realfagstermer/issues/new?title=' + subject + '&body=' + body;\n    },\n\n    testDirty: function() {\n      this.dirty = ! angular.equals(this.data, this.originalData);\n      // if (this.dirty) this.saved = false;\n      this.ensureBlankFields(this.data);\n    },\n\n    generateHints: function(data) {\n      var m;\n\n      data.prefLabel.nn[0].hints = [];\n      if (data.prefLabel.nb[0].value) {\n        data.prefLabel.nn[0].hints.push(data.prefLabel.nb[0].value);\n      }\n      m = data.prefLabel.nb[0].value.match('^(.*)er$');\n      if (m) {\n        data.prefLabel.nn[0].hints.push(m[1] + 'ar');\n      }\n      for (var i = 0; i < Math.min(data.altLabel.nn.length, data.altLabel.nb.length); i++) {\n        data.altLabel.nn[i].hints = [];\n        if (data.altLabel.nb[i].value) {\n          data.altLabel.nn[i].hints.push(data.altLabel.nb[i].value);\n        }\n        m = data.altLabel.nb[i].value.match('^(.*)er$');\n        if (m) {\n          data.altLabel.nn[i].hints.push(m[1] + 'ar');\n        }\n      }\n    },\n\n    /**\n     * Make sure there is always one blank field at the end of the term list to add new data to\n     * for each language\n     */\n    ensureBlankFields: function(data) {\n      var that = this;\n      config.languages.forEach(function(lng) {\n\n        // There should be at least one text field, so we add\n        // one if there are none.\n        \n        if (data.altLabel[lng].length === 0 || data.altLabel[lng][data.altLabel[lng].length - 1].value !== '') {\n          data.altLabel[lng].push({ value: '' });\n          that.generateHints(data);\n        }\n\n        if (data.altLabel[lng].length >= 2 && data.altLabel[lng][data.altLabel[lng].length - 1].value === '' && data.altLabel[lng][data.altLabel[lng].length - 2].value === '') {\n          data.altLabel[lng] = data.altLabel[lng].slice(0, data.altLabel[lng].length - 1);\n        }\n\n      });\n    },\n\n    store: function() {\n      var that = this;\n      that.error = '';\n      that.saved = false;\n      that.dirty = false;\n      this.saving = true;\n      Backend.putConcept(this.data).then(function(response) {\n        that.saving = false;\n        console.log(response);\n        if (!response.data.status) {\n          that.error = response.data;\n          window.alert('Save failed, see concept for more info.');\n          return;\n        }\n        if (response.data.status != 'success') {\n          if (response.data.status == 'edit_conflict') {\n            that.error = 'Redigeringskonflikt: Begrepet har blitt endret på serveren siden du begynte å redigere. Kopier ulagrede endringer og trykk så \"Tilbakestill\" (eller last siden på nytt) for å hente inn det oppdaterte begrepet.';\n            window.alert('Redigeringskonflikt, endringene dine har ikke blitt lagret.');\n          } else if (response.data.status == 'no_permission') {\n            that.error = 'Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.';\n            window.alert('Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.');\n          } else {\n            that.error = response.data.status;\n            window.alert('Save failed, see concept for more info.');\n          }\n          return;\n        }\n        that.saved = true;\n        that.load(true);  // Reload to get term URIs etc..\n      }).catch(function(err) {\n        that.saving = false;\n        console.log(err);\n        that.error = 'Invalid response received: ' + err.message;\n        window.alert('Save failed!');\n      });\n    },\n\n    load: function(force) {\n      var that = this,\n          deferred = $q.defer();\n\n      if (this.data && !force) {\n        $timeout(function() {\n          deferred.resolve();\n        }, 0);\n      } else {\n        this.loading = true;\n        Backend.getConcept(this.uri).success(function(data) {\n          that.loading = false;\n          if (!data.concept) {\n            if (data.error) {\n              that.error = data.error;\n            } else {\n              that.error = data;\n            }\n            deferred.reject();\n            return;\n          }\n          that.setData(data.concept);\n          that.error = null;\n          console.log('[Concept] Concept loaded: ' + data.concept.uri);\n          console.log(that.data);\n          $rootScope.$broadcast('conceptLoaded', that);\n          deferred.resolve();\n        }).error(function() {\n          that.loading = false;\n          that.error = 'Load failed. Server or network problems.';\n          deferred.reject();\n        });\n      }\n      return deferred.promise;\n    },\n\n    toJson: function() {\n      var data = {},\n          that = this;\n      Object.keys(this).forEach(function(x) {\n        if (x == 'originalData') return;\n        data[x] = that[x];\n      });\n      return JSON.stringify(data);\n    }\n\n  };\n\n  return Concept;\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.concepts', ['app.services.backend', 'app.services.concept'])\n\n.service('Concepts', ['$rootScope', '$q', '$timeout', '$state', 'Backend', 'Concept', function($rootScope, $q, $timeout, $state, Backend, Concept) {\n  'use strict';\n\n  var busy = false;\n  var that = this;\n  var currentConcept = null;\n  var currentFilter = null;\n\n  this.concepts = [];\n  this.cursor = 0;\n  this.count = 0;\n\n  $rootScope.$on('conceptChanged', function(evt, concept) {\n    currentConcept = concept;\n    if (!currentConcept.data) {\n      currentConcept.load();\n    }\n  });\n\n  $rootScope.$on('conceptLabelChanged', function(evt, concept) {\n    console.log('Label changed, re-sort list');\n//    that.sort();\n  });\n\n  function fetch(filter) {\n    if (busy) return;\n\n    if (filter != currentFilter) {\n      that.concepts = [];\n      currentFilter = filter;\n    }\n\n    console.log('[Concepts] fetchConcepts');\n\n    busy = true;\n    Backend.getConcepts(that.cursor, filter).success(function(results) {\n      busy = false;\n      if (!results.concepts) {\n        console.log('[Concepts] Fetch failed!');\n        // TODO: Emit event?\n        return;\n      }\n      that.count = results.count;\n      if (that.count != that.concepts.length) {\n        that.concepts = [];\n      }\n      that.cursor = results.cursor;\n\n      results.concepts.forEach(function(concept, idx) {\n        var n = that.cursor + idx;\n        //that.concepts[n] = new Concept(concept.id, concept.uri, concept.label);\n        if (!that.getByUri(concept.uri)) {\n\n          if (currentConcept && currentConcept.uri == concept.uri) {\n            that.concepts.push(currentConcept);\n          } else {\n            that.concepts.push(new Concept(concept.id, concept.uri, concept.label));\n          }\n\n        }\n      });\n\n      //that.sort();\n      console.log('[Concepts] Fetched');\n      $rootScope.$broadcast('loadedConcepts', that.concepts);\n    });\n  }\n\n  this.getConcepts = function() {\n    return that.concepts;\n  };\n\n  this.fetch = function(filter) {\n    fetch(filter);\n  };\n\n  this.getById = function(id) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.id == id) return c; else return p;\n    }, null);\n  };\n\n  this.getByUri = function(uri) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.uri == uri) return c; else return p;\n    }, null);\n  };\n\n  this.sort = function() {\n    // console.log('[Concepts] Sort');\n    that.concepts.sort(function(a,b) {\n      return a.label.localeCompare(b.label);\n    });\n  };\n\n  this.add = function(id, uri) {\n    console.log('[Concepts] Add <' + uri + '> to the current list of ' + that.concepts.length + ' concepts.');\n    var concept = new Concept(id, uri, '(...)');\n    that.concepts.push(concept);\n    return concept;\n  };\n\n  this.show = function(concept) {\n    $state.go('concepts.concept', { id: concept.id });\n  };\n\n  this.next = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    var n = currentConceptIdx + 1;\n    if (n > that.concepts.length - 1) n = 0;\n    that.show(that.concepts[n]);\n  };\n\n  this.prev = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    var n = currentConceptIdx - 1;\n    if (n < 0) n = that.concepts.length - 1;\n    that.show(that.concepts[n]);\n  };\n\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.state', ['app.services.concepts'])\n\n.service('StateService', ['$rootScope', 'Concepts', function($rootScope, Concepts) {\n  'use strict';\n\n  var state = {\n    concept: null,\n    term: null,\n    view: null\n  };\n\n  this.setView = function(view) {\n    if (view == state.view) return;\n    state.view = view;\n    console.log('[state] > New view');\n    console.log(view);\n    $rootScope.$broadcast('viewChanged', state.view);\n  };\n\n  this.getView = function() {\n    return state.view;\n  };\n\n  this.setConcept = function(concept) {\n    if (state.concept == concept) return;\n    state.concept = concept;\n    $rootScope.$broadcast('conceptChanged', state.concept);\n  };\n\n  this.getConcept = function() {\n    return state.concept;\n  };\n\n  this.setTerm = function(term) {\n    if (state.term == term) return;\n    state.term = term;\n    $rootScope.$broadcast('termChanged', state.term);\n  };\n\n  this.getTerm = function() {\n    return state.term;\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.user', ['app.services.backend'])\n\n.factory('User', ['$q', '$rootScope', '$timeout', 'Backend', function($q, $rootScope, $timeout, Backend) {\n  'use strict';\n\n  function User(id, label) {\n    var that = this;\n    that.data = null;\n  }\n\n  User.prototype = {\n\n    constructor: User,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      this.data = data;\n    }\n\n  };\n\n  User.get = function(id) {\n    var deferred = $q.defer();\n    Backend.getUser(id).then(function(data) {\n      console.log(data);\n      deferred.resolve(data);\n    });\n    return deferred.promise;\n  };\n\n  return User;\n\n}]);\n"],"sourceRoot":"/source/"}