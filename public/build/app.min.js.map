{"version":3,"sources":["app.config.js","main.js","directives/altlabels.js","directives/conceptnav.js","directives/term.js","controllers/AuthController.js","controllers/ConceptController.js","controllers/ConceptsController.js","controllers/UserController.js","controllers/UsersController.js","models/auth.js","models/backend.js","models/concept.js","models/concepts.js","models/state.js","models/user.js"],"names":["angular","module","constant","views","id","name","label","filters","value","graphOption","languages","config","$stateProvider","$urlRouterProvider","$locationProvider","$logProvider","hotkeysProvider","debugEnabled","includeCheatSheet","defaultView","urimap","^REAL([0-9]+)$","tplVersion","state","url","templateUrl","needsPermission","controller","$stateParams","view","resolve","concept","Concepts","uri","Object","keys","forEach","k","m","match","getByUri","add","users","$http","method","params","action","user","User","get","returnTo","html5Mode","run","$rootScope","$location","$state","Auth","$on","event","toState","toParams","console","log","hasPermission","preventDefault","href","isLoggedIn","go","username","$scope","$log","$timeout","menuAvailable","toggleMenu","element","toggleClass","e","directive","StateService","restrict","replace","scope","items","originalItems","lang","disabled","link","attrs","bind","keydown","evt","keyCode","push","$li","$","target","parent","$lis","children","length","$next","next","find","focus","setCurrentTerm","idx","index","term","setTerm","markReviewed","window","alert","html","hotkeys","filterobj","concepts","busy","totalCount","count","bindTo","combo","description","callback","fetchMoreConcepts","fetch","setTimeout","checkScrollPos","currentConcept","selectConcept","show","this","getConcept","y","first","height","indexOf","ctop","cbottom","wtop","scrollTop","wbottom","graphOptionEnabled","select","submit","filterString","query","local","q","join","Backend","transclude","data","originalData","readonly","cont","$parent","dirty","confirm","then","reload","$term","$terms","prev","encodeURIComponent","$window","setFocus","field","setConcept","setView","isLoaded","$watch","c","p","testDirty","store","storeAndGo","debug","load","keyboardModifier","navigator","platform","allowIn","open","katapiUrl","i","selectedView","split","filterKeys","map","x","f","undefined","selectedLanguages","getView","service","$cookieStore","currentUser","permission","that","created","getRequest","postRequest","getUser","opts","getUsers","getConcepts","cursor","filter","putConcept","factory","$q","Concept","loading","saving","saved","error","status","prototype","constructor","setData","editorialNote","altLabel","lng","prefLabel","ensureBlankFields","generateHints","oldLabel","nb","copy","$broadcast","subject","body","githubUrl","equals","nn","hints","Math","min","slice","response","err","message","force","deferred","defer","success","reject","promise","toJson","JSON","stringify","currentFilter","results","getById","reduce","sort","a","b","localeCompare","currentConceptIdx","n","getTerm"],"mappings":"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","file":"app.min.js","sourcesContent":["\n/**\n * Config\n */\nangular.module('app.config', [])\n  .constant('config', {\n    views: [\n      {id: 1, name: 'default', label: 'Standard'},\n      {id: 2, name: 'nn', label: 'Omsetjing til nynorsk'},\n    ],\n    filters: [\n      { value:'', label:'(intet filter)' },\n      { value: 'has:unverified', label: 'Ikke korrekturlest' }, \n      { value: 'exists:prefLabel@nn', label: 'Har språk:nynorsk', graphOption: true },\n      { value: '-exists:prefLabel@nn', label: 'Mangler språk:nynorsk' },\n      { value: 'has:editorialNote', label: 'Har noter', graphOption: true }\n     ],\n    languages: ['nb', 'nn', 'en', 'la']\n  });"," \n// Declare app level module which depends on filters, and services\nangular.module('app', ['ngSanitize',\n                       'vs-repeat',\n                       'cfp.hotkeys',\n                       'ui.router',\n                       '720kb.tooltips',\n\n                       'app.config',\n                       'app.controllers.user',\n                       'app.controllers.users',\n                       'app.controllers.concept',\n                       'app.controllers.concepts',\n                       'app.controllers.auth',\n \n                       'app.services.user',\n                       'app.services.backend',\n                       'app.services.auth',\n                       'app.services.concepts',\n                       'app.services.concept',\n                       'app.services.state',\n\n                       'app.directives.altlabels',\n                       'app.directives.conceptnav'])\n\n\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$logProvider', 'hotkeysProvider', function($stateProvider, $urlRouterProvider, $locationProvider, $logProvider, hotkeysProvider) {\n  'use strict';\n\n  $logProvider.debugEnabled(true);\n  hotkeysProvider.includeCheatSheet = true;\n\n\n  var defaultView = 'nn';\n\n  // For any unmatched url, redirect to /\n  //$urlRouterProvider.otherwise('/concepts');\n\n  var urimap = {\n    '^REAL([0-9]+)$': 'http://data.ub.uio.no/realfagstermer/c'\n  };\n\n  var tplVersion = '?ver=2';  // Increase to purge cache\n\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'partials/home.html' + tplVersion\n    })\n    .state('concepts', {\n      url: '/concepts?q',\n      templateUrl: 'partials/concepts.html' + tplVersion,\n      needsPermission: 'edit',\n      controller: 'ConceptsController'\n    })\n    .state('concepts.concept', {\n      needsPermission: 'edit',\n      url: '/:id?view',\n      templateUrl: function ($stateParams) {\n        return '/partials/concept.' + ($stateParams.view ? $stateParams.view : defaultView) + '.html' + tplVersion;\n      },\n      controller: 'ConceptController',\n      resolve: {\n        // An optional map of dependencies which should be injected into the controller. \n        // If any of these dependencies are promises, the router will wait for them all\n        // to be resolved or one to be rejected before the controller is instantiated.\n        view: ['$stateParams', function ($stateParams) {\n          var view = $stateParams.view ? $stateParams.view : defaultView ;\n          return view;\n        }],\n        concept: ['$stateParams', 'Concepts', function ($stateParams, Concepts) {\n          var id = $stateParams.id;\n\n          var uri;\n          Object.keys(urimap).forEach(function(k) {\n            var m = id.match(k);\n            if (m) uri = urimap[k] + m[1];\n          });\n          var concept = Concepts.getByUri(uri);\n          if (!concept) {\n            concept = Concepts.add(id, uri);\n          }\n          // console.log(concept);\n          return concept;\n          // return Concepts.get([{id: $stateParams.id}]); // Returns promise\n          // return Concepts.getByUri(uri); // returns promise\n        }]\n      }\n    })\n    .state('users', {\n      url: '/users',\n      templateUrl: 'partials/users.html' + tplVersion,\n      controller: 'UsersController',\n      needsPermission: 'edit',\n      resolve: {\n        users: ['$http', function($http) {\n          return $http({ method: 'GET', url: 'api.php', params: {action: 'get_users'} });\n        }]\n      }\n    })\n    .state('user', {\n      url: '/users/:id',\n      templateUrl: 'partials/user.html' + tplVersion,\n      controller: 'UserController',\n      needsPermission: 'view',\n      resolve: {\n        user: ['$stateParams', 'User', function($stateParams, User) {\n          return User.get($stateParams.id);\n        }]\n      }\n    })\n    .state('auth', {\n      url: '/auth?returnTo',\n      templateUrl: 'partials/auth.html' + tplVersion,\n      controller: 'AuthController',\n      resolve: {\n        returnTo: ['$stateParams', function($stateParams) {\n          return $stateParams.returnTo;\n        }]\n      }\n    })\n    ;\n    // .state('state2', {\n    //   url: \"/state2\",\n    //   templateUrl: \"partials/state2.html\"\n    // })\n    // .state('state2.list', {\n    //   url: \"/list\",\n    //   templateUrl: \"partials/state2.list.html\",\n    //   controller: function($scope) {\n    //     $scope.things = [\"A\", \"Set\", \"Of\", \"Things\"];\n    //   }\n    // });\n\n  // $routeProvider\n  //   .when('/', {\n  //     templateUrl: 'views/concepts.html',\n  //     controller : 'ConceptsController',\n  //     reloadOnSearch: false,\n  //     access: 'verified'\n  //   })\n  //   .when('/users', {\n  //     templateUrl: 'views/users.html',\n  //     controller : 'UsersController',\n  //     access: 'verified'\n  //   })\n  //   .when('/auth', {\n  //     templateUrl: 'views/auth.html',\n  //     controller : 'AuthController',\n  //     access: 'public'\n  //   })\n  //   .otherwise({\n  //     redirectTo: '/'\n  //   });\n\n  // use the HTML5 History API\n  $locationProvider.html5Mode(true);\n\n}])\n\n.run(['$rootScope', '$location', '$state', 'Auth', function ($rootScope, $location, $state, Auth) {\n  'use strict';\n\n    $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n      console.log('$stateChangeStart: has \"' + toState.needsPermission + '\" permission ? ' + (Auth.hasPermission(toState.needsPermission) ? 'yes' : 'no'));\n      if (!Auth.hasPermission(toState.needsPermission)) {\n        event.preventDefault();\n        var url = $state.href(toState, toParams);\n        if (Auth.isLoggedIn()) {\n          $state.go('user', { id: Auth.user.username[0] });\n        } else {\n          $state.go('auth', { returnTo: url });\n        }\n      }\n    });\n\n}])\n\n.controller('HeaderCtrl', ['$scope', '$location', '$log', '$timeout', 'Auth', 'Concepts', 'StateService', function($scope, $location, $log, $timeout, Auth, Concepts, StateService){\n  'use strict';\n\n  // console.log('LoginCtrl init');\n\n  $scope.user = Auth.user;\n\n  // TODO: Use Stateservice to determine?\n  $scope.menuAvailable = true;\n\n  $scope.toggleMenu = function() {\n    angular.element('body').toggleClass('menuVisible');\n  };\n\n  $scope.$on('userChanged', function(e, user) {\n    $scope.user = user;\n  });\n\n\n  // function stateChanged() {\n  //   // var id = $location.hash();\n  //   var id = $location.search().id;\n  //   if (!id) return;\n  //   $log.debug('[main] State changed: ' + id);\n\n  //   var uri;\n  //   Object.keys(urimap).forEach(function(k) {\n  //     var m = id.match(k);\n  //     if (m) uri = urimap[k] + m[1];\n  //   });\n  //   var concept = Concepts.getByUri(uri);\n  //   if (!concept) {\n  //     $log.debug('[main] Add concept <' + uri + '>');\n  //     concept = Concepts.add(id, uri);\n  //   }\n  //   StateService.setConcept(concept);\n  // }\n\n  // $scope.$on('$stateChangeSuccess', stateChanged);\n  // // $scope.$on('$routeUpdate', stateChanged);\n\n}]);\n","// Declare app level module which depends on filters, and services\nangular.module('app.directives.altlabels', ['app.services.state'])\n\n.directive('altlabels', ['StateService', function (StateService) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/altlabels.html',\n    replace: false,\n    scope: { items: '=', originalItems: '=', lang: '@', disabled: '@' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        // console.log(evt);\n        if (evt.keyCode === 13) { // Enter\n          scope.items.push({value:''});\n        }\n        if (evt.keyCode === 40) {\n          // Down\n          var $li = $(evt.target).parent();\n          var $lis = $li.parent().children('li');\n          if ($lis.length <= 1) return;\n          var $next = $li.next('li');\n          //console.log($next);\n          if ($next.length === 0) $next = $($lis[0]);\n          $next.find('input').focus();\n          //console.log($next.find('input').val());\n        }\n        if (evt.keyCode === 38) {\n          // Up\n        }\n      };\n\n      scope.setCurrentTerm = function(evt) {\n        var $li = $(evt.target).parent();\n        var idx = $li.parent().children('li').index($li);\n        var term = scope.items[idx];\n        StateService.setTerm(term);\n      };\n\n      scope.markReviewed = function(uri) {\n        console.log('Mark reviewed: ' + uri);\n        window.alert('not implemented');\n      };\n\n      function bind(lang, items) {\n        // ?\n      }\n      /*if (attrs.disabled) {\n        scope.disabled = true;\n      }*/\n\n      if (attrs.items) {\n        bind(attrs.lang, attrs.items);\n      } else {\n        element.html('<em>No items provided</em>');\n      }\n\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.conceptnav', ['app.config', 'app.services.concepts', 'app.services.state'])\n\n.directive('conceptnav', ['$state', '$location', 'hotkeys', 'StateService', 'Concepts', 'config', function ($state, $location, hotkeys, StateService, Concepts, config) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/conceptnav.html',\n    replace: false,\n    scope: {\n      'filterobj': '='  // Two-way data binding\n    },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n      console.log('>>> Linking conceptnav');\n      scope.filters = config.filters;\n      scope.concepts = [];\n      scope.busy = true;\n      scope.totalCount = Concepts.count;\n\n      hotkeys.bindTo(scope)\n      .add({\n        combo: '/',\n        description: 'Søk',\n        callback: function(event, hotkey) {\n          event.preventDefault();\n          $('.conceptnav input:text').focus();\n        }\n      });\n\n      scope.fetchMoreConcepts = function() {\n        // called by infinite scroll\n        console.log('FETCH MORE');\n        Concepts.fetch();\n      };\n\n      scope.$on('loadedConcepts', function(evt, concepts) {\n        scope.concepts = concepts;\n        scope.totalCount = Concepts.count;\n        scope.busy = false;\n        setTimeout(function() {\n          scope.checkScrollPos(scope.currentConcept);\n        });\n      });\n\n      function conceptListUpdated() {\n        console.log('conceptListUpdated');\n      }\n\n      scope.selectConcept = function() {\n        // console.log(this.concept);\n        Concepts.show(this.concept);\n      };\n\n      scope.currentConcept = StateService.getConcept();\n\n      scope.checkScrollPos = function(concept) {\n        // All elements have the same height since we are using angular-vs-repeat\n        var y = $('.scrollerwrapper').children().first().height(),\n            idx = scope.concepts.indexOf(concept),\n            ctop = idx * y,\n            cbottom = ctop + y,\n            wtop = $('.scrollerwrapper').scrollTop(),\n            wbottom = wtop + $('.scrollerwrapper').height();\n\n        if (idx === -1) return; \n        if (!concept) return; \n\n        if (cbottom >= wbottom) {\n          $('.scrollerwrapper').scrollTop( cbottom - $('.scrollerwrapper').height() );\n        } else if (ctop <= wtop) {\n          $('.scrollerwrapper').scrollTop( ctop );\n        }\n      };\n\n      scope.$on('conceptChanged', function(evt, concept) {\n        scope.currentConcept = concept;\n        scope.checkScrollPos(concept);\n      });\n\n      scope.graphOptionEnabled = function() {\n        return scope.filterobj.select && scope.filterobj.select.graphOption;\n      };\n\n      scope.submit = function() {\n        var filterString = [];\n        if (scope.filterobj.query) filterString.push(scope.filterobj.query);\n        if (scope.filterobj.select) filterString.push(scope.filterobj.select.value);\n        if (scope.graphOptionEnabled() && scope.filterobj.local) filterString.push('graph:local');\n        console.log(filterString);\n\n        $state.go('concepts.concept', {q: filterString.join(',')});\n      };\n\n      var q = [];\n      if (scope.filterobj.query) {\n        q.push(scope.filterobj.query);\n      }\n      if (scope.filterobj.select) {\n        q.push(scope.filterobj.select.value);\n      }\n      if (scope.filterobj.local) {\n        q.push('graph:local');\n      }\n\n      q = q.join(',');\n      console.log(q);\n      scope.busy = true;\n      Concepts.fetch(q);\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.term', ['app.services.state', 'app.services.backend'])\n\n.directive('term', ['StateService', 'Backend', function (StateService, Backend) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    transclude: true,\n    templateUrl: '/partials/term.html',\n    replace: false,\n    scope: { data: '=', originalData: '=', readonly: '=' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.markReviewed = function() {\n        var cont = true;\n        // TODO: Something more elegant than scope.$parent ?\n        if (scope.$parent.currentConcept.dirty) {\n          cont = window.confirm('Endringer du har gjort på dette begrepet vil gå tapt. Vil du fortsette?');\n        }\n        if (!cont) return;\n        Backend.markReviewed(scope.originalData.uri).then(function(response) {\n          // TODO: Something more elegant than scope.$parent ?\n          scope.$parent.reload();  // Reload to get term URIs etc..\n        });\n      };\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        if (evt.keyCode === 13) { // Enter\n          //scope.$parent.items.push({value:''});\n        }\n        if (evt.keyCode === 40 || evt.keyCode === 38) {\n          var $term = $(evt.target).parent();\n          var $terms = $term.parent().children('term');\n          var $next;\n\n          if ($terms.length <= 1) return;\n          // Down\n          if (evt.keyCode == 40) {\n             $next = $term.next('term');\n            if ($next.length === 0) $next = $($terms[0]);\n          } else {\n            $next = $term.prev('term');\n            if ($next.length === 0) $next = $($terms[$terms.length-1]);\n          }\n          $next.find('input').focus();\n        }\n      };\n\n      scope.focus = function(evt) {\n        StateService.setTerm(scope.data);\n        $(evt.target).select();\n      };\n\n    }\n  };\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.auth', ['app.services.auth'])\n\n.controller('AuthController', ['$scope', 'Auth', 'returnTo', function($scope, Auth, returnTo) {\n  'use strict';\n\n  $scope.returnTo = window.encodeURIComponent(returnTo);\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concept', ['app.services.backend',\n                                           'app.services.auth',\n                                           'app.services.state',\n                                           'app.services.concepts'])\n\n.controller('ConceptController', ['$scope', '$window', '$log', '$timeout', 'hotkeys', 'Backend',\n                                  'StateService', 'Concepts', 'concept', 'view',\n                                  function($scope, $window, $log, $timeout, hotkeys, Backend, \n                                           StateService, Concepts, concept, view) {\n  'use strict';\n\n  console.log('[ConceptController] Init: view=' + view + ', id=' + concept.id);\n  StateService.setConcept(concept);\n  StateService.setView(view);\n  $scope.currentConcept = concept;\n\n  //-\n  // Focus first edit field once available\n  //-\n\n  function setFocus () {\n    $timeout(function() {\n      var field = angular.element('.main input[type=\"text\"]:enabled');\n      if (field.length) field[0].focus();\n    }, 0);\n  }\n\n  if (concept.isLoaded()) {\n    setFocus();\n  }\n  $scope.$on('conceptLoaded', function(e, user) {\n    setFocus();\n  });\n\n  //-\n  // Test dirtyness on data change\n  //-\n\n  $scope.$watch('currentConcept.data', function(c, p) {\n    if (!p || !c) return;\n    if (p.uri != c.uri) return;\n    $scope.currentConcept.testDirty();\n  }, true);\n\n  //-\n  // Store\n  //-\n\n  $scope.store = function() {\n    if ($scope.currentConcept.dirty) {\n      $scope.currentConcept.store();\n    }\n  };\n\n  $scope.storeAndGo = function() {\n    $scope.store();\n    Concepts.next();\n  };\n\n  $scope.reload = function() {\n    $log.debug('[main] Reload concept');\n    $scope.currentConcept.load(true);\n  };\n\n\n  //-\n  // Keyboard shortcuts\n  //-\n\n  // when you bind it to the controller's scope, it will automatically unbind\n  // the hotkey when the scope is destroyed (due to ng-if or something that changes the DOM)\n  \n  var keyboardModifier = 'alt';\n  if (navigator.platform == 'MacIntel') {\n    keyboardModifier = 'ctrl';\n  }\n\n  hotkeys.bindTo($scope)\n    .add({\n      combo: keyboardModifier + '+s',\n      description: 'Lagre og hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.storeAndGo();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+shift+s',\n      description: 'Lagre',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.store();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+down',\n      description: 'Hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.next();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+up',\n      description: 'Hopp til forrige',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.prev();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+k',\n      description: 'Vis katalogposter',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        window.open($scope.currentConcept.katapiUrl, 'katapi');\n      },\n      allowIn: ['INPUT']\n    });\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concepts', ['app.config', 'app.services.backend'])\n\n.controller('ConceptsController', ['$scope', '$state', '$stateParams', 'Backend', 'StateService', 'config',\n                                  function($scope, $state, $stateParams, Backend, StateService, config) {\n  'use strict';\n\n  console.log('-- ConceptsController --');\n  // console.log($stateParams);\n\n  $scope.filterobj = {};\n  if ($stateParams.q) {\n    $stateParams.q.split(',').forEach(function(p) {\n      var filterKeys = config.filters.map(function(x) { return x.value; });\n      var f = config.filters[filterKeys.indexOf(p)];\n      if (f !== undefined) {\n        $scope.filterobj.select = f;\n      } else if (p.match('(graph:local)')) {\n        $scope.filterobj.local = true;\n      } else {\n        $scope.filterobj.query = p;\n      }\n    });\n  }\n  if (!$scope.filterobj.select) {\n    $scope.filterobj.select = config.filters[0];\n  }\n\n  $scope.selectedLanguages = config.languages;\n  $scope.views = config.views;\n\n  function setView(view) {\n    if (!view) return;\n    for (var i = $scope.views.length - 1; i >= 0; i--) {\n      if ($scope.views[i].name == view) {\n        $scope.selectedView = $scope.views[i];\n        break;\n      }\n    }\n  }\n\n  setView(StateService.getView());\n\n  $scope.$on('viewChanged', function(evt, view) {\n    setView(view);\n  });\n\n\n  $scope.$watch('selectedView', function(c, p) {\n    if (!p || !c) return;\n    if (p == c) return;\n\n    $state.go('concepts.concept', { view: c.name });\n\n  });\n\n  $scope.currentConcept = StateService.getConcept();\n\n  $scope.$on('conceptChanged', function(evt, concept) {\n    console.log('[ConceptsController] Concept changed: ' + concept.uri);\n    // $log.debug(concept);\n    $scope.currentConcept = concept;\n  });\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.user', ['app.services.auth'])\n\n.controller('UserController', ['$scope', 'user', function($scope, user) {\n  'use strict';\n\n  console.log(user);\n  $scope.user = user.data.user;\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.users', ['app.services.backend',\n                                        'app.services.auth',\n                                        'app.services.state',\n                                        'app.services.concepts'])\n\n.controller('UsersController', ['$scope', 'users', function($scope, users) {\n  'use strict';\n\n  console.log(users);\n\n  $scope.users = users.data.users;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.auth', ['ngCookies', 'app.services.backend'])\n\n.service('Auth', ['$rootScope', '$cookieStore', function($rootScope, $cookieStore) {\n  'use strict';\n\n  var currentUser = $cookieStore.get('user') || { username: '', permission: [] };\n\n  this.user = currentUser;\n  var that = this;\n\n  this.hasPermission = function(permission) {\n    if (!permission) return true;\n    if (permission == 'view') return that.isLoggedIn();\n    return that.user.permission.indexOf(permission) != -1 ? true : false;\n  };\n\n  this.isLoggedIn = function(user) {\n    if(user === undefined)\n        user = that.user;\n    return user.created;\n  };\n\n  this.user = currentUser;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.backend', [])\n\n.service('Backend', ['$rootScope', '$http', function($rootScope, $http) {\n  'use strict';\n  // console.log('Backend init');\n\n  function getRequest(method, params) {\n    if (!params) params = {};\n    params.action = method;\n    return $http({\n      method: 'GET',\n      url: 'api.php',\n      params: params\n    });\n  }\n\n  function postRequest(method, data) {\n    if (!data) data = {};\n    data.action = method;\n    return $http({\n      method: 'POST',\n      url: 'api.php',\n      data: data\n    });\n  }\n\n  this.getUser = function(id) {\n    var opts = {};\n    if (id) opts.id = id;\n    return getRequest('get_user', opts);\n  };\n\n  this.getUsers = function() {\n    return getRequest('get_users');\n  };\n\n  this.getConcepts = function(cursor, filter) {\n    return getRequest('get_concepts', {cursor: cursor, filter: filter});\n  };\n\n  this.getConcept = function(uri) {\n    return getRequest('get_concept', {uri: uri});\n  };\n\n  this.putConcept = function(data) {\n    return postRequest('put_concept', {data: data});\n  };\n\n  this.markReviewed = function(uri) {\n    return postRequest('mark_reviewed', {uri: uri});\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.concept', ['app.config', 'app.services.backend', 'app.directives.altlabels', 'app.directives.term'])\n\n.factory('Concept', ['$q', '$rootScope', '$timeout', 'Backend', 'config', function($q, $rootScope, $timeout, Backend, config) {\n  'use strict';\n\n  function Concept(id, uri, label) {\n    var that = this;\n    that.dirty = false;\n    that.loading = false;\n    that.saving = false;\n    that.saved = false;\n    that.error = null;\n    that.id = id;\n    that.uri = uri;\n    that.label = label;\n    that.status = 'minimal';  // 'complete', 'saving', 'saved'\n    that.data = null;\n  }\n\n  Concept.prototype = {\n\n    constructor: Concept,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      // If no (editable) editorialNote field, create one\n      if (!data.editorialNote) {\n        data.editorialNote = [{ value: '' }];\n      } else if (data.editorialNote[0].readonly) {\n        data.editorialNote.push({ value: '' });        \n      }\n\n      if (!data.altLabel || !Object.keys(data.altLabel).length) data.altLabel = {};\n      config.languages.forEach(function(lng) {\n        // There should be at least one text field, so we add\n        // one if there are none.\n        if (!data.prefLabel[lng]) data.prefLabel[lng] = [{ value: '' }];\n        if (!data.altLabel[lng]) data.altLabel[lng] = [{ value: '' }];\n      });\n      this.ensureBlankFields(data);\n      this.generateHints(data);\n\n      var oldLabel = this.label;\n      this.label = data.prefLabel.nb[0].value;\n      this.data = data;\n      this.originalData = angular.copy(data);\n      if (oldLabel != this.label) {\n        $rootScope.$broadcast('conceptLabelChanged', this);\n      }\n\n      var subject = encodeURIComponent(this.label);\n      this.katapiUrl = 'https://katapi.biblionaut.net/documents?q=real:' + this.label;\n      var body = encodeURIComponent('\\n\\n\\n\\n--\\nURI: ' + this.uri + '\\nBruk: ' + this.katapiUrl);\n      this.githubUrl = 'https://github.com/realfagstermer/realfagstermer/issues/new?title=' + subject + '&body=' + body;\n    },\n\n    testDirty: function() {\n      this.dirty = ! angular.equals(this.data, this.originalData);\n      // if (this.dirty) this.saved = false;\n      this.ensureBlankFields(this.data);\n    },\n\n    generateHints: function(data) {\n      var m;\n\n      data.prefLabel.nn[0].hints = [];\n      if (data.prefLabel.nb[0].value) {\n        data.prefLabel.nn[0].hints.push(data.prefLabel.nb[0].value);\n      }\n      m = data.prefLabel.nb[0].value.match('^(.*)er$');\n      if (m) {\n        data.prefLabel.nn[0].hints.push(m[1] + 'ar');\n      }\n      for (var i = 0; i < Math.min(data.altLabel.nn.length, data.altLabel.nb.length); i++) {\n        data.altLabel.nn[i].hints = [];\n        if (data.altLabel.nb[i].value) {\n          data.altLabel.nn[i].hints.push(data.altLabel.nb[i].value);\n        }\n        m = data.altLabel.nb[i].value.match('^(.*)er$');\n        if (m) {\n          data.altLabel.nn[i].hints.push(m[1] + 'ar');\n        }\n      }\n    },\n\n    /**\n     * Make sure there is always one blank field at the end of the term list to add new data to\n     * for each language\n     */\n    ensureBlankFields: function(data) {\n      var that = this;\n      config.languages.forEach(function(lng) {\n\n        // There should be at least one text field, so we add\n        // one if there are none.\n        \n        if (data.altLabel[lng].length === 0 || data.altLabel[lng][data.altLabel[lng].length - 1].value !== '') {\n          data.altLabel[lng].push({ value: '' });\n          that.generateHints(data);\n        }\n\n        if (data.altLabel[lng].length >= 2 && data.altLabel[lng][data.altLabel[lng].length - 1].value === '' && data.altLabel[lng][data.altLabel[lng].length - 2].value === '') {\n          data.altLabel[lng] = data.altLabel[lng].slice(0, data.altLabel[lng].length - 1);\n        }\n\n      });\n    },\n\n    store: function() {\n      var that = this;\n      that.error = '';\n      that.saved = false;\n      that.dirty = false;\n      this.saving = true;\n      Backend.putConcept(this.data).then(function(response) {\n        that.saving = false;\n        console.log(response);\n        if (!response.data.status) {\n          that.error = response.data;\n          window.alert('Save failed, see concept for more info.');\n          return;\n        }\n        if (response.data.status != 'success') {\n          if (response.data.status == 'edit_conflict') {\n            that.error = 'Redigeringskonflikt: Begrepet har blitt endret på serveren siden du begynte å redigere. Kopier ulagrede endringer og trykk så \"Tilbakestill\" (eller last siden på nytt) for å hente inn det oppdaterte begrepet.';\n            window.alert('Redigeringskonflikt, endringene dine har ikke blitt lagret.');\n          } else if (response.data.status == 'no_permission') {\n            that.error = 'Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.';\n            window.alert('Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.');\n          } else {\n            that.error = response.data.status;\n            window.alert('Save failed, see concept for more info.');\n          }\n          return;\n        }\n        that.saved = true;\n        that.load(true);  // Reload to get term URIs etc..\n      }).catch(function(err) {\n        that.saving = false;\n        console.log(err);\n        that.error = 'Invalid response received: ' + err.message;\n        window.alert('Save failed!');\n      });\n    },\n\n    load: function(force) {\n      var that = this,\n          deferred = $q.defer();\n\n      if (this.data && !force) {\n        $timeout(function() {\n          deferred.resolve();\n        }, 0);\n      } else {\n        this.loading = true;\n        Backend.getConcept(this.uri).success(function(data) {\n          that.loading = false;\n          if (!data.concept) {\n            if (data.error) {\n              that.error = data.error;\n            } else {\n              that.error = data;\n            }\n            deferred.reject();\n            return;\n          }\n          that.setData(data.concept);\n          that.error = null;\n          console.log('[Concept] Concept loaded: ' + data.concept.uri);\n          console.log(that.data);\n          $rootScope.$broadcast('conceptLoaded', that);\n          deferred.resolve();\n        }).error(function() {\n          that.loading = false;\n          that.error = 'Load failed. Server or network problems.';\n          deferred.reject();\n        });\n      }\n      return deferred.promise;\n    },\n\n    toJson: function() {\n      var data = {},\n          that = this;\n      Object.keys(this).forEach(function(x) {\n        if (x == 'originalData') return;\n        data[x] = that[x];\n      });\n      return JSON.stringify(data);\n    }\n\n  };\n\n  return Concept;\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.concepts', ['app.services.backend', 'app.services.concept'])\n\n.service('Concepts', ['$rootScope', '$q', '$timeout', '$state', 'Backend', 'Concept', function($rootScope, $q, $timeout, $state, Backend, Concept) {\n  'use strict';\n\n  var busy = false;\n  var that = this;\n  var currentConcept = null;\n  var currentFilter = null;\n\n  this.concepts = [];\n  this.cursor = 0;\n  this.count = 0;\n\n  $rootScope.$on('conceptChanged', function(evt, concept) {\n    currentConcept = concept;\n    if (!currentConcept.data) {\n      currentConcept.load();\n    }\n  });\n\n  $rootScope.$on('conceptLabelChanged', function(evt, concept) {\n    console.log('Label changed, re-sort list');\n//    that.sort();\n  });\n\n  function fetch(filter) {\n    if (busy) return;\n\n    if (filter != currentFilter) {\n      that.concepts = [];\n      currentFilter = filter;\n    }\n\n    console.log('[Concepts] fetchConcepts');\n\n    busy = true;\n    Backend.getConcepts(that.cursor, filter).success(function(results) {\n      busy = false;\n      if (!results.concepts) {\n        console.log('[Concepts] Fetch failed!');\n        // TODO: Emit event?\n        return;\n      }\n      that.count = results.count;\n      if (that.count != that.concepts.length) {\n        that.concepts = [];\n      }\n      that.cursor = results.cursor;\n\n      results.concepts.forEach(function(concept, idx) {\n        var n = that.cursor + idx;\n        //that.concepts[n] = new Concept(concept.id, concept.uri, concept.label);\n        if (!that.getByUri(concept.uri)) {\n\n          if (currentConcept && currentConcept.uri == concept.uri) {\n            that.concepts.push(currentConcept);\n          } else {\n            that.concepts.push(new Concept(concept.id, concept.uri, concept.label));\n          }\n\n        }\n      });\n\n      //that.sort();\n      console.log('[Concepts] Fetched');\n      $rootScope.$broadcast('loadedConcepts', that.concepts);\n    });\n  }\n\n  this.getConcepts = function() {\n    return that.concepts;\n  };\n\n  this.fetch = function(filter) {\n    fetch(filter);\n  };\n\n  this.getById = function(id) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.id == id) return c; else return p;\n    }, null);\n  };\n\n  this.getByUri = function(uri) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.uri == uri) return c; else return p;\n    }, null);\n  };\n\n  this.sort = function() {\n    // console.log('[Concepts] Sort');\n    that.concepts.sort(function(a,b) {\n      return a.label.localeCompare(b.label);\n    });\n  };\n\n  this.add = function(id, uri) {\n    console.log('[Concepts] Add <' + uri + '> to the current list of ' + that.concepts.length + ' concepts.');\n    var concept = new Concept(id, uri, '(...)');\n    that.concepts.push(concept);\n    return concept;\n  };\n\n  this.show = function(concept) {\n    $state.go('concepts.concept', { id: concept.id });\n  };\n\n  this.next = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    var n = currentConceptIdx + 1;\n    if (n > that.concepts.length - 1) n = 0;\n    that.show(that.concepts[n]);\n  };\n\n  this.prev = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    var n = currentConceptIdx - 1;\n    if (n < 0) n = that.concepts.length - 1;\n    that.show(that.concepts[n]);\n  };\n\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.state', ['app.services.concepts'])\n\n.service('StateService', ['$rootScope', 'Concepts', function($rootScope, Concepts) {\n  'use strict';\n\n  var state = {\n    concept: null,\n    term: null,\n    view: null\n  };\n\n  this.setView = function(view) {\n    if (view == state.view) return;\n    state.view = view;\n    console.log('[state] > New view');\n    console.log(view);\n    $rootScope.$broadcast('viewChanged', state.view);\n  };\n\n  this.getView = function() {\n    return state.view;\n  };\n\n  this.setConcept = function(concept) {\n    if (state.concept == concept) return;\n    state.concept = concept;\n    $rootScope.$broadcast('conceptChanged', state.concept);\n  };\n\n  this.getConcept = function() {\n    return state.concept;\n  };\n\n  this.setTerm = function(term) {\n    if (state.term == term) return;\n    state.term = term;\n    $rootScope.$broadcast('termChanged', state.term);\n  };\n\n  this.getTerm = function() {\n    return state.term;\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.user', ['app.services.backend'])\n\n.factory('User', ['$q', '$rootScope', '$timeout', 'Backend', function($q, $rootScope, $timeout, Backend) {\n  'use strict';\n\n  function User(id, label) {\n    var that = this;\n    that.data = null;\n  }\n\n  User.prototype = {\n\n    constructor: User,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      this.data = data;\n    }\n\n  };\n\n  User.get = function(id) {\n    var deferred = $q.defer();\n    Backend.getUser(id).then(function(data) {\n      console.log(data);\n      deferred.resolve(data);\n    });\n    return deferred.promise;\n  };\n\n  return User;\n\n}]);\n"],"sourceRoot":"/source/"}