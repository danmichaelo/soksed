{"version":3,"sources":["app.config.js","main.js","directives/altlabels.js","directives/conceptnav.js","directives/term.js","controllers/AuthController.js","controllers/ConceptController.js","controllers/ConceptsController.js","controllers/HeaderController.js","controllers/UserController.js","controllers/UsersController.js","models/auth.js","models/backend.js","models/concept.js","models/concepts.js","models/state.js","models/user.js"],"names":["angular","module","constant","views","id","name","label","filters","value","graphOption","languages","config","$stateProvider","$urlRouterProvider","$locationProvider","$logProvider","hotkeysProvider","debugEnabled","includeCheatSheet","defaultView","urimap","^REAL([0-9]+)$","tplVersion","state","url","templateUrl","needsPermission","controller","$stateParams","view","resolve","concept","Concepts","StateService","setView","uri","Object","keys","forEach","k","m","match","setConcept","getByUri","add","users","$http","method","params","action","user","User","get","returnTo","html5Mode","run","$rootScope","$location","$state","Auth","$on","event","toState","toParams","console","log","hasPermission","preventDefault","href","isLoggedIn","go","username","directive","restrict","replace","scope","items","originalItems","lang","disabled","link","element","attrs","bind","keydown","evt","keyCode","push","$li","$","target","parent","$lis","children","length","$next","next","find","focus","setCurrentTerm","idx","index","term","setTerm","markReviewed","window","alert","html","hotkeys","filterobj","concepts","busy","totalCount","count","bindTo","combo","description","callback","selectConcept","show","this","currentConcept","getConcept","checkScrollPos","y","first","height","indexOf","ctop","cbottom","wtop","scrollTop","wbottom","graphOptionEnabled","select","submit","filterString","query","local","q","join","fetch","then","setTimeout","err","error","Backend","transclude","data","originalData","readonly","cont","$parent","dirty","confirm","reload","$term","$terms","prev","$scope","encodeURIComponent","$window","$log","$timeout","setFocus","field","isLoaded","$watch","c","p","testDirty","store","storeAndGo","debug","load","keyboardModifier","navigator","platform","allowIn","open","katapiUrl","i","selectedView","split","filterKeys","map","x","f","undefined","selectedLanguages","getView","menuAvailable","toggleMenu","toggleClass","e","service","$cookieStore","currentUser","permission","that","created","getRequest","postRequest","getUser","opts","getUsers","getConcepts","cursor","filter","putConcept","factory","$q","Concept","loading","saving","saved","status","prototype","constructor","setData","editorialNote","altLabel","lng","prefLabel","ensureBlankFields","generateHints","oldLabel","nb","copy","$broadcast","subject","body","githubUrl","equals","nn","hints","Math","min","slice","response","message","force","deferred","defer","success","reject","promise","toJson","JSON","stringify","currentFilter","results","getById","reduce","sort","a","b","localeCompare","currentConceptIdx","n","getTerm"],"mappings":"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","file":"app.min.js","sourcesContent":["\n/**\n * Config\n */\nangular.module('app.config', [])\n  .constant('config', {\n    views: [\n      {id: 1, name: 'default', label: 'Standard'},\n      {id: 2, name: 'nn', label: 'Omsetjing til nynorsk'},\n    ],\n    filters: [\n      { value:'', label:'(intet filter)' },\n      { value: 'has:unverified', label: 'Ikke korrekturlest' }, \n      { value: 'exists:prefLabel@nn', label: 'Har språk:nynorsk', graphOption: true },\n      { value: '-exists:prefLabel@nn', label: 'Mangler språk:nynorsk' },\n      { value: 'has:editorialNote', label: 'Har noter', graphOption: true }\n     ],\n    languages: ['nb', 'nn', 'en', 'la']\n  });"," \n// Declare app level module which depends on filters, and services\nangular.module('app', ['ngSanitize',\n                       'vs-repeat',\n                       'cfp.hotkeys',\n                       'ui.router',\n                       '720kb.tooltips',\n\n                       'app.config',\n                       'app.controllers.header',\n                       'app.controllers.user',\n                       'app.controllers.users',\n                       'app.controllers.concept',\n                       'app.controllers.concepts',\n                       'app.controllers.auth',\n \n                       'app.services.user',\n                       'app.services.backend',\n                       'app.services.auth',\n                       'app.services.concepts',\n                       'app.services.concept',\n                       'app.services.state',\n\n                       'app.directives.altlabels',\n                       'app.directives.conceptnav'])\n\n\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$logProvider', 'hotkeysProvider', function($stateProvider, $urlRouterProvider, $locationProvider, $logProvider, hotkeysProvider) {\n  'use strict';\n\n  $logProvider.debugEnabled(true);\n  hotkeysProvider.includeCheatSheet = true;\n\n\n  var defaultView = 'nn';\n\n  // For any unmatched url, redirect to /\n  //$urlRouterProvider.otherwise('/concepts');\n\n  var urimap = {\n    '^REAL([0-9]+)$': 'http://data.ub.uio.no/realfagstermer/c'\n  };\n\n  var tplVersion = '?ver=2';  // Increase to purge cache\n\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'partials/home.html' + tplVersion\n    })\n    .state('concepts', {\n      url: '/concepts?q',\n      templateUrl: 'partials/concepts.html' + tplVersion,\n      needsPermission: 'edit',\n      controller: 'ConceptsController'\n    })\n    .state('concepts.concept', {\n      needsPermission: 'edit',\n      url: '/:id?view',\n      templateUrl: function ($stateParams) {\n        return '/partials/concept.' + ($stateParams.view ? $stateParams.view : defaultView) + '.html' + tplVersion;\n      },\n      controller: 'ConceptController',\n      resolve: {\n        // An optional map of dependencies which should be injected into the controller. \n        // If any of these dependencies are promises, the router will wait for them all\n        // to be resolved or one to be rejected before the controller is instantiated.\n        concept: ['$stateParams', 'Concepts', 'StateService', function ($stateParams, Concepts, StateService) {\n          var id = $stateParams.id;\n\n          StateService.setView($stateParams.view ? $stateParams.view : defaultView);\n\n          var uri;\n          Object.keys(urimap).forEach(function(k) {\n            var m = id.match(k);\n            if (m) uri = urimap[k] + m[1];\n          });\n          if (!uri) {\n            StateService.setConcept(null);\n            return;\n          }\n\n          var concept = Concepts.getByUri(uri);\n          if (!concept) {\n            concept = Concepts.add(id, uri);\n          }\n          // console.log(concept);\n          StateService.setConcept(concept);\n          return concept;\n          // return Concepts.get([{id: $stateParams.id}]); // Returns promise\n          // return Concepts.getByUri(uri); // returns promise\n        }]\n      }\n    })\n    .state('users', {\n      url: '/users',\n      templateUrl: 'partials/users.html' + tplVersion,\n      controller: 'UsersController',\n      needsPermission: 'edit',\n      resolve: {\n        users: ['$http', function($http) {\n          return $http({ method: 'GET', url: 'api.php', params: {action: 'get_users'} });\n        }]\n      }\n    })\n    .state('user', {\n      url: '/users/:id',\n      templateUrl: 'partials/user.html' + tplVersion,\n      controller: 'UserController',\n      needsPermission: 'view',\n      resolve: {\n        user: ['$stateParams', 'User', function($stateParams, User) {\n          return User.get($stateParams.id);\n        }]\n      }\n    })\n    .state('auth', {\n      url: '/auth?returnTo',\n      templateUrl: 'partials/auth.html' + tplVersion,\n      controller: 'AuthController',\n      resolve: {\n        returnTo: ['$stateParams', function($stateParams) {\n          return $stateParams.returnTo;\n        }]\n      }\n    }) ;\n\n  // use the HTML5 History API\n  $locationProvider.html5Mode(true);\n\n}])\n\n.run(['$rootScope', '$location', '$state', 'Auth', function ($rootScope, $location, $state, Auth) {\n  'use strict';\n\n    $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n      console.log('$stateChangeStart: has \"' + toState.needsPermission + '\" permission ? ' + (Auth.hasPermission(toState.needsPermission) ? 'yes' : 'no'));\n      if (!Auth.hasPermission(toState.needsPermission)) {\n        event.preventDefault();\n        var url = $state.href(toState, toParams);\n        if (Auth.isLoggedIn()) {\n          $state.go('user', { id: Auth.user.username[0] });\n        } else {\n          $state.go('auth', { returnTo: url });\n        }\n      }\n    });\n\n}]);\n","// Declare app level module which depends on filters, and services\nangular.module('app.directives.altlabels', ['app.services.state'])\n\n.directive('altlabels', ['StateService', function (StateService) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/altlabels.html',\n    replace: false,\n    scope: { items: '=', originalItems: '=', lang: '@', disabled: '@' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        // console.log(evt);\n        if (evt.keyCode === 13) { // Enter\n          scope.items.push({value:''});\n        }\n        if (evt.keyCode === 40) {\n          // Down\n          var $li = $(evt.target).parent();\n          var $lis = $li.parent().children('li');\n          if ($lis.length <= 1) return;\n          var $next = $li.next('li');\n          //console.log($next);\n          if ($next.length === 0) $next = $($lis[0]);\n          $next.find('input').focus();\n          //console.log($next.find('input').val());\n        }\n        if (evt.keyCode === 38) {\n          // Up\n        }\n      };\n\n      scope.setCurrentTerm = function(evt) {\n        var $li = $(evt.target).parent();\n        var idx = $li.parent().children('li').index($li);\n        var term = scope.items[idx];\n        StateService.setTerm(term);\n      };\n\n      scope.markReviewed = function(uri) {\n        console.log('Mark reviewed: ' + uri);\n        window.alert('not implemented');\n      };\n\n      function bind(lang, items) {\n        // ?\n      }\n      /*if (attrs.disabled) {\n        scope.disabled = true;\n      }*/\n\n      if (attrs.items) {\n        bind(attrs.lang, attrs.items);\n      } else {\n        element.html('<em>No items provided</em>');\n      }\n\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.conceptnav', ['app.config', 'app.services.concepts', 'app.services.state'])\n\n.directive('conceptnav', ['$state', '$location', 'hotkeys', 'StateService', 'Concepts', 'config', function ($state, $location, hotkeys, StateService, Concepts, config) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/conceptnav.html',\n    replace: false,\n    scope: {\n      'filterobj': '='  // Two-way data binding\n    },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n      console.log('>>> Linking conceptnav');\n      scope.filters = config.filters;\n      scope.concepts = [];\n      scope.busy = true;\n      scope.totalCount = Concepts.count;\n\n      hotkeys.bindTo(scope)\n      .add({\n        combo: '/',\n        description: 'Søk',\n        callback: function(event, hotkey) {\n          event.preventDefault();\n          $('.conceptnav input:text').focus();\n        }\n      });\n\n      function conceptListUpdated() {\n        console.log('conceptListUpdated');\n      }\n\n      scope.selectConcept = function() {\n        // console.log(this.concept);\n        Concepts.show(this.concept);\n      };\n\n      scope.currentConcept = StateService.getConcept();\n\n      scope.checkScrollPos = function(concept) {\n        // All elements have the same height since we are using angular-vs-repeat\n        var y = $('.scrollerwrapper').children().first().height(),\n            idx = scope.concepts.indexOf(concept),\n            ctop = idx * y,\n            cbottom = ctop + y,\n            wtop = $('.scrollerwrapper').scrollTop(),\n            wbottom = wtop + $('.scrollerwrapper').height();\n\n        if (idx === -1) return; \n        if (!concept) return; \n\n        if (cbottom >= wbottom) {\n          $('.scrollerwrapper').scrollTop( cbottom - $('.scrollerwrapper').height() );\n        } else if (ctop <= wtop) {\n          $('.scrollerwrapper').scrollTop( ctop );\n        }\n      };\n\n      scope.$on('conceptChanged', function(evt, concept) {\n        scope.currentConcept = concept;\n        scope.checkScrollPos(concept);\n      });\n\n      scope.graphOptionEnabled = function() {\n        return scope.filterobj.select && scope.filterobj.select.graphOption;\n      };\n\n      scope.submit = function() {\n        var filterString = [];\n        if (scope.filterobj.query) filterString.push(scope.filterobj.query);\n        if (scope.filterobj.select) filterString.push(scope.filterobj.select.value);\n        if (scope.graphOptionEnabled() && scope.filterobj.local) filterString.push('graph:local');\n        console.log(filterString);\n\n        $state.go('concepts.concept', {q: filterString.join(',')});\n      };\n\n      var q = [];\n      if (scope.filterobj.query) {\n        q.push(scope.filterobj.query);\n      }\n      if (scope.filterobj.select) {\n        q.push(scope.filterobj.select.value);\n      }\n      if (scope.filterobj.local) {\n        q.push('graph:local');\n      }\n\n      q = q.join(',');\n      console.log(q);\n      if (!Concepts.busy) {\n        scope.busy = true;\n        Concepts.fetch(q).then(function(concepts) {\n          scope.concepts = concepts;\n          scope.totalCount = Concepts.count;\n          scope.busy = false;\n          setTimeout(function() {\n            scope.checkScrollPos(scope.currentConcept);\n          });\n        }).catch(function(err) {\n          scope.concepts = [];\n          scope.totalCount = 0;\n          scope.error = err;\n          scope.busy = false;\n        });\n      }\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.term', ['app.services.state', 'app.services.backend'])\n\n.directive('term', ['StateService', 'Backend', function (StateService, Backend) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    transclude: true,\n    templateUrl: '/partials/term.html',\n    replace: false,\n    scope: { data: '=', originalData: '=', readonly: '=' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.markReviewed = function() {\n        var cont = true;\n        // TODO: Something more elegant than scope.$parent ?\n        if (scope.$parent.currentConcept.dirty) {\n          cont = window.confirm('Endringer du har gjort på dette begrepet vil gå tapt. Vil du fortsette?');\n        }\n        if (!cont) return;\n        Backend.markReviewed(scope.originalData.uri).then(function(response) {\n          // TODO: Something more elegant than scope.$parent ?\n          scope.$parent.reload();  // Reload to get term URIs etc..\n        });\n      };\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        if (evt.keyCode === 13) { // Enter\n          //scope.$parent.items.push({value:''});\n        }\n        if (evt.keyCode === 40 || evt.keyCode === 38) {\n          var $term = $(evt.target).parent();\n          var $terms = $term.parent().children('term');\n          var $next;\n\n          if ($terms.length <= 1) return;\n          // Down\n          if (evt.keyCode == 40) {\n             $next = $term.next('term');\n            if ($next.length === 0) $next = $($terms[0]);\n          } else {\n            $next = $term.prev('term');\n            if ($next.length === 0) $next = $($terms[$terms.length-1]);\n          }\n          $next.find('input').focus();\n        }\n      };\n\n      scope.focus = function(evt) {\n        StateService.setTerm(scope.data);\n        $(evt.target).select();\n      };\n\n    }\n  };\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.auth', ['app.services.auth'])\n\n.controller('AuthController', ['$scope', 'Auth', 'returnTo', function($scope, Auth, returnTo) {\n  'use strict';\n\n  $scope.returnTo = window.encodeURIComponent(returnTo);\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concept', ['app.services.backend',\n                                           'app.services.auth',\n                                           'app.services.state',\n                                           'app.services.concepts'])\n\n.controller('ConceptController', ['$scope', '$window', '$log', '$timeout', 'hotkeys', 'Backend',\n                                  'Concepts', 'concept',\n                                  function($scope, $window, $log, $timeout, hotkeys, Backend, \n                                           Concepts, concept) {\n  'use strict';\n\n  if (concept) {\n    console.log('[ConceptController] Init: id=' + concept.id);\n  } else {\n    console.log('[ConceptController] Init: no concept');\n    return;\n  }\n  $scope.currentConcept = concept;\n\n  //-\n  // Focus first edit field once available\n  //-\n\n  function setFocus () {\n    $timeout(function() {\n      var field = angular.element('.main input[type=\"text\"]:enabled');\n      if (field.length) field[0].focus();\n    }, 0);\n  }\n\n  if (concept.isLoaded()) {\n    setFocus();\n  }\n  $scope.$on('conceptLoaded', function(e, user) {\n    setFocus();\n  });\n\n  //-\n  // Test dirtyness on data change\n  //-\n\n  $scope.$watch('currentConcept.data', function(c, p) {\n    if (!p || !c) return;\n    if (p.uri != c.uri) return;\n    $scope.currentConcept.testDirty();\n  }, true);\n\n  //-\n  // Store\n  //-\n\n  $scope.store = function() {\n    if ($scope.currentConcept.dirty) {\n      $scope.currentConcept.store();\n    }\n  };\n\n  $scope.storeAndGo = function() {\n    $scope.store();\n    Concepts.next();\n  };\n\n  $scope.reload = function() {\n    $log.debug('[main] Reload concept');\n    $scope.currentConcept.load(true);\n  };\n\n\n  //-\n  // Keyboard shortcuts\n  //-\n\n  // when you bind it to the controller's scope, it will automatically unbind\n  // the hotkey when the scope is destroyed (due to ng-if or something that changes the DOM)\n  \n  var keyboardModifier = 'alt';\n  if (navigator.platform == 'MacIntel') {\n    keyboardModifier = 'ctrl';\n  }\n\n  hotkeys.bindTo($scope)\n    .add({\n      combo: keyboardModifier + '+s',\n      description: 'Lagre og hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.storeAndGo();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+shift+s',\n      description: 'Lagre',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.store();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+down',\n      description: 'Hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.next();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+up',\n      description: 'Hopp til forrige',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.prev();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+k',\n      description: 'Vis katalogposter',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        window.open($scope.currentConcept.katapiUrl, 'katapi');\n      },\n      allowIn: ['INPUT']\n    });\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concepts', ['app.config', 'app.services.backend'])\n\n.controller('ConceptsController', ['$scope', '$state', '$stateParams', 'Backend', 'StateService', 'config',\n                                  function($scope, $state, $stateParams, Backend, StateService, config) {\n  'use strict';\n\n  console.log('-- ConceptsController --');\n  // console.log($stateParams);\n\n  $scope.filterobj = {};\n  if ($stateParams.q) {\n    $stateParams.q.split(',').forEach(function(p) {\n      var filterKeys = config.filters.map(function(x) { return x.value; });\n      var f = config.filters[filterKeys.indexOf(p)];\n      if (f !== undefined) {\n        $scope.filterobj.select = f;\n      } else if (p.match('(graph:local)')) {\n        $scope.filterobj.local = true;\n      } else {\n        $scope.filterobj.query = p;\n      }\n    });\n  }\n  if (!$scope.filterobj.select) {\n    $scope.filterobj.select = config.filters[0];\n  }\n\n  $scope.selectedLanguages = config.languages;\n  $scope.views = config.views;\n\n  function setView(view) {\n    if (!view) return;\n    for (var i = $scope.views.length - 1; i >= 0; i--) {\n      if ($scope.views[i].name == view) {\n        $scope.selectedView = $scope.views[i];\n        break;\n      }\n    }\n  }\n\n  setView(StateService.getView());\n\n  $scope.$on('viewChanged', function(evt, view) {\n    setView(view);\n  });\n\n  $scope.$watch('selectedView', function(c, p) {\n    if (!p || !c) return;\n    if (p == c) return;\n\n    $state.go('concepts.concept', { view: c.name });\n\n  });\n\n  $scope.currentConcept = StateService.getConcept();\n\n  $scope.$on('conceptChanged', function(evt, concept) {\n    console.log('[ConceptsController] Concept changed: ');\n    console.log(concept);\n    $scope.currentConcept = concept;\n  });\n\n}]);","/**\n * HeaderController\n */\nangular.module('app.controllers.header', ['app.services.auth'])\n\n.controller('HeaderController', ['$scope', 'Auth', function($scope, Auth){\n  'use strict';\n\n  // TODO: Use Stateservice to determine?\n  $scope.menuAvailable = true;\n\n  $scope.toggleMenu = function() {\n    angular.element('body').toggleClass('menuVisible');\n  };\n\n  $scope.user = Auth.user;\n  $scope.$on('userChanged', function(e, user) {\n    $scope.user = user;\n  });\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.user', ['app.services.auth'])\n\n.controller('UserController', ['$scope', 'user', function($scope, user) {\n  'use strict';\n\n  console.log(user);\n  $scope.user = user.data.user;\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.users', ['app.services.backend',\n                                        'app.services.auth',\n                                        'app.services.state',\n                                        'app.services.concepts'])\n\n.controller('UsersController', ['$scope', 'users', function($scope, users) {\n  'use strict';\n\n  console.log(users);\n\n  $scope.users = users.data.users;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.auth', ['ngCookies', 'app.services.backend'])\n\n.service('Auth', ['$rootScope', '$cookieStore', function($rootScope, $cookieStore) {\n  'use strict';\n\n  var currentUser = $cookieStore.get('user') || { username: '', permission: [] };\n\n  this.user = currentUser;\n  var that = this;\n\n  this.hasPermission = function(permission) {\n    if (!permission) return true;\n    if (permission == 'view') return that.isLoggedIn();\n    return that.user.permission.indexOf(permission) != -1 ? true : false;\n  };\n\n  this.isLoggedIn = function(user) {\n    if(user === undefined)\n        user = that.user;\n    return user.created;\n  };\n\n  this.user = currentUser;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.backend', [])\n\n.service('Backend', ['$rootScope', '$http', function($rootScope, $http) {\n  'use strict';\n  // console.log('Backend init');\n\n  function getRequest(method, params) {\n    if (!params) params = {};\n    params.action = method;\n    return $http({\n      method: 'GET',\n      url: 'api.php',\n      params: params\n    });\n  }\n\n  function postRequest(method, data) {\n    if (!data) data = {};\n    data.action = method;\n    return $http({\n      method: 'POST',\n      url: 'api.php',\n      data: data\n    });\n  }\n\n  this.getUser = function(id) {\n    var opts = {};\n    if (id) opts.id = id;\n    return getRequest('get_user', opts);\n  };\n\n  this.getUsers = function() {\n    return getRequest('get_users');\n  };\n\n  this.getConcepts = function(cursor, filter) {\n    return getRequest('get_concepts', {cursor: cursor, filter: filter});\n  };\n\n  this.getConcept = function(uri) {\n    return getRequest('get_concept', {uri: uri});\n  };\n\n  this.putConcept = function(data) {\n    return postRequest('put_concept', {data: data});\n  };\n\n  this.markReviewed = function(uri) {\n    return postRequest('mark_reviewed', {uri: uri});\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.concept', ['app.config', 'app.services.backend', 'app.directives.altlabels', 'app.directives.term'])\n\n.factory('Concept', ['$q', '$rootScope', '$timeout', 'Backend', 'config', function($q, $rootScope, $timeout, Backend, config) {\n  'use strict';\n\n  function Concept(id, uri, label) {\n    var that = this;\n    that.dirty = false;\n    that.loading = false;\n    that.saving = false;\n    that.saved = false;\n    that.error = null;\n    that.id = id;\n    that.uri = uri;\n    that.label = label;\n    that.status = 'minimal';  // 'complete', 'saving', 'saved'\n    that.data = null;\n  }\n\n  Concept.prototype = {\n\n    constructor: Concept,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      // If no (editable) editorialNote field, create one\n      if (!data.editorialNote) {\n        data.editorialNote = [{ value: '' }];\n      } else if (data.editorialNote[0].readonly) {\n        data.editorialNote.push({ value: '' });        \n      }\n\n      if (!data.altLabel || !Object.keys(data.altLabel).length) data.altLabel = {};\n      config.languages.forEach(function(lng) {\n        // There should be at least one text field, so we add\n        // one if there are none.\n        if (!data.prefLabel[lng]) data.prefLabel[lng] = [{ value: '' }];\n        if (!data.altLabel[lng]) data.altLabel[lng] = [{ value: '' }];\n      });\n      this.ensureBlankFields(data);\n      this.generateHints(data);\n\n      var oldLabel = this.label;\n      this.label = data.prefLabel.nb[0].value;\n      this.data = data;\n      this.originalData = angular.copy(data);\n      if (oldLabel != this.label) {\n        $rootScope.$broadcast('conceptLabelChanged', this);\n      }\n\n      var subject = encodeURIComponent(this.label);\n      this.katapiUrl = 'https://katapi.biblionaut.net/documents?q=real:' + this.label;\n      var body = encodeURIComponent('\\n\\n\\n\\n--\\nURI: ' + this.uri + '\\nBruk: ' + this.katapiUrl);\n      this.githubUrl = 'https://github.com/realfagstermer/realfagstermer/issues/new?title=' + subject + '&body=' + body;\n    },\n\n    testDirty: function() {\n      this.dirty = ! angular.equals(this.data, this.originalData);\n      // if (this.dirty) this.saved = false;\n      this.ensureBlankFields(this.data);\n    },\n\n    generateHints: function(data) {\n      var m;\n\n      data.prefLabel.nn[0].hints = [];\n      if (data.prefLabel.nb[0].value) {\n        data.prefLabel.nn[0].hints.push(data.prefLabel.nb[0].value);\n      }\n      m = data.prefLabel.nb[0].value.match('^(.*)er$');\n      if (m) {\n        data.prefLabel.nn[0].hints.push(m[1] + 'ar');\n      }\n      for (var i = 0; i < Math.min(data.altLabel.nn.length, data.altLabel.nb.length); i++) {\n        data.altLabel.nn[i].hints = [];\n        if (data.altLabel.nb[i].value) {\n          data.altLabel.nn[i].hints.push(data.altLabel.nb[i].value);\n        }\n        m = data.altLabel.nb[i].value.match('^(.*)er$');\n        if (m) {\n          data.altLabel.nn[i].hints.push(m[1] + 'ar');\n        }\n      }\n    },\n\n    /**\n     * Make sure there is always one blank field at the end of the term list to add new data to\n     * for each language\n     */\n    ensureBlankFields: function(data) {\n      var that = this;\n      config.languages.forEach(function(lng) {\n\n        // There should be at least one text field, so we add\n        // one if there are none.\n        \n        if (data.altLabel[lng].length === 0 || data.altLabel[lng][data.altLabel[lng].length - 1].value !== '') {\n          data.altLabel[lng].push({ value: '' });\n          that.generateHints(data);\n        }\n\n        if (data.altLabel[lng].length >= 2 && data.altLabel[lng][data.altLabel[lng].length - 1].value === '' && data.altLabel[lng][data.altLabel[lng].length - 2].value === '') {\n          data.altLabel[lng] = data.altLabel[lng].slice(0, data.altLabel[lng].length - 1);\n        }\n\n      });\n    },\n\n    store: function() {\n      var that = this;\n      that.error = '';\n      that.saved = false;\n      that.dirty = false;\n      this.saving = true;\n      Backend.putConcept(this.data).then(function(response) {\n        that.saving = false;\n        console.log(response);\n        if (!response.data.status) {\n          that.error = response.data;\n          window.alert('Save failed, see concept for more info.');\n          return;\n        }\n        if (response.data.status != 'success') {\n          if (response.data.status == 'edit_conflict') {\n            that.error = 'Redigeringskonflikt: Begrepet har blitt endret på serveren siden du begynte å redigere. Kopier ulagrede endringer og trykk så \"Tilbakestill\" (eller last siden på nytt) for å hente inn det oppdaterte begrepet.';\n            window.alert('Redigeringskonflikt, endringene dine har ikke blitt lagret.');\n          } else if (response.data.status == 'no_permission') {\n            that.error = 'Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.';\n            window.alert('Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.');\n          } else {\n            that.error = response.data.status;\n            window.alert('Save failed, see concept for more info.');\n          }\n          return;\n        }\n        that.saved = true;\n        that.load(true);  // Reload to get term URIs etc..\n      }).catch(function(err) {\n        that.saving = false;\n        console.log(err);\n        that.error = 'Invalid response received: ' + err.message;\n        window.alert('Save failed!');\n      });\n    },\n\n    load: function(force) {\n      var that = this,\n          deferred = $q.defer();\n\n      if (this.data && !force) {\n        $timeout(function() {\n          deferred.resolve();\n        }, 0);\n      } else {\n        this.loading = true;\n        Backend.getConcept(this.uri).success(function(data) {\n          that.loading = false;\n          if (!data.concept) {\n            if (data.error) {\n              that.error = data.error;\n            } else {\n              that.error = data;\n            }\n            deferred.reject();\n            return;\n          }\n          that.setData(data.concept);\n          that.error = null;\n          console.log('[Concept] Concept loaded: ' + data.concept.uri);\n          console.log(that.data);\n          $rootScope.$broadcast('conceptLoaded', that);\n          deferred.resolve();\n        }).error(function() {\n          that.loading = false;\n          that.error = 'Load failed. Server or network problems.';\n          deferred.reject();\n        });\n      }\n      return deferred.promise;\n    },\n\n    toJson: function() {\n      var data = {},\n          that = this;\n      Object.keys(this).forEach(function(x) {\n        if (x == 'originalData') return;\n        data[x] = that[x];\n      });\n      return JSON.stringify(data);\n    }\n\n  };\n\n  return Concept;\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.concepts', ['app.services.backend', 'app.services.concept'])\n\n.service('Concepts', ['$rootScope', '$q', '$timeout', '$state', 'Backend', 'Concept', function($rootScope, $q, $timeout, $state, Backend, Concept) {\n  'use strict';\n\n  var that = this;\n  var currentConcept = null;\n  var currentFilter = null;\n\n  this.busy = false;\n  this.concepts = [];\n  this.cursor = 0;\n  this.count = 0;\n\n  $rootScope.$on('conceptChanged', function(evt, concept) {\n    currentConcept = concept;\n    if (!currentConcept.data) {\n      currentConcept.load();\n    }\n  });\n\n  $rootScope.$on('conceptLabelChanged', function(evt, concept) {\n    console.log('Label changed, re-sort list');\n//    that.sort();\n  });\n\n  this.fetch = function(filter) {\n    if (that.busy) return;\n    var deferred = $q.defer();\n\n    if (filter != currentFilter) {\n      that.concepts = [];\n      currentFilter = filter;\n    }\n\n    console.log('[Concepts] fetchConcepts');\n\n    that.busy = true;\n    Backend.getConcepts(that.cursor, filter).success(function(results) {\n      that.busy = false;\n      if (!results.concepts) {\n        console.log('[Concepts] Fetch failed!');\n        that.count = 0;\n        that.concepts = [];\n        deferred.reject(results);\n        return;\n      }\n      that.count = results.count;\n      if (that.count != that.concepts.length) {\n        that.concepts = [];\n      }\n      that.cursor = results.cursor;\n\n      results.concepts.forEach(function(concept, idx) {\n        var n = that.cursor + idx;\n        //that.concepts[n] = new Concept(concept.id, concept.uri, concept.label);\n        if (!that.getByUri(concept.uri)) {\n\n          if (currentConcept && currentConcept.uri == concept.uri) {\n            that.concepts.push(currentConcept);\n          } else {\n            that.concepts.push(new Concept(concept.id, concept.uri, concept.label));\n          }\n\n        }\n      });\n\n      //that.sort();\n      console.log('[Concepts] Fetched');\n      $rootScope.$broadcast('loadedConcepts', that.concepts);\n      deferred.resolve(that.concepts);\n    });\n    return deferred.promise;\n  };\n\n  this.getConcepts = function() {\n    return that.concepts;\n  };\n\n  this.getById = function(id) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.id == id) return c; else return p;\n    }, null);\n  };\n\n  this.getByUri = function(uri) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.uri == uri) return c; else return p;\n    }, null);\n  };\n\n  this.sort = function() {\n    // console.log('[Concepts] Sort');\n    that.concepts.sort(function(a,b) {\n      return a.label.localeCompare(b.label);\n    });\n  };\n\n  this.add = function(id, uri) {\n    console.log('[Concepts] Add <' + uri + '> to the current list of ' + that.concepts.length + ' concepts.');\n    var concept = new Concept(id, uri, '(...)');\n    that.concepts.push(concept);\n    return concept;\n  };\n\n  this.show = function(concept) {\n    $state.go('concepts.concept', { id: concept.id });\n  };\n\n  this.next = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    if (currentConceptIdx == -1) {\n      console.log('Current concept is not part of the current concept list');\n      return;\n    }\n    var n = currentConceptIdx + 1;\n    if (n > that.concepts.length - 1) n = 0;\n    that.show(that.concepts[n]);\n  };\n\n  this.prev = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    if (currentConceptIdx == -1) {\n      console.log('Current concept is not part of the current concept list');\n      return;\n    }\n    var n = currentConceptIdx - 1;\n    if (n < 0) n = that.concepts.length - 1;\n    that.show(that.concepts[n]);\n  };\n\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.state', ['app.services.concepts'])\n\n.service('StateService', ['$rootScope', 'Concepts', function($rootScope, Concepts) {\n  'use strict';\n\n  var state = {\n    concept: null,\n    term: null,\n    view: null\n  };\n\n  this.setView = function(view) {\n    if (view == state.view) return;\n    state.view = view;\n    console.log('[StateService] Set view: ' + view);\n    $rootScope.$broadcast('viewChanged', state.view);\n  };\n\n  this.getView = function() {\n    return state.view;\n  };\n\n  this.setConcept = function(concept) {\n    if (state.concept == concept) return;\n    state.concept = concept;\n    $rootScope.$broadcast('conceptChanged', state.concept);\n  };\n\n  this.getConcept = function() {\n    return state.concept;\n  };\n\n  this.setTerm = function(term) {\n    if (state.term == term) return;\n    state.term = term;\n    $rootScope.$broadcast('termChanged', state.term);\n  };\n\n  this.getTerm = function() {\n    return state.term;\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.user', ['app.services.backend'])\n\n.factory('User', ['$q', '$rootScope', '$timeout', 'Backend', function($q, $rootScope, $timeout, Backend) {\n  'use strict';\n\n  function User(id, label) {\n    var that = this;\n    that.data = null;\n  }\n\n  User.prototype = {\n\n    constructor: User,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      this.data = data;\n    }\n\n  };\n\n  User.get = function(id) {\n    var deferred = $q.defer();\n    Backend.getUser(id).then(function(data) {\n      console.log(data);\n      deferred.resolve(data);\n    });\n    return deferred.promise;\n  };\n\n  return User;\n\n}]);\n"],"sourceRoot":"/source/"}