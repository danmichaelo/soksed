{"version":3,"sources":["app.config.js","main.js","directives/altlabels.js","directives/conceptnav.js","directives/term.js","controllers/AuthController.js","controllers/ConceptController.js","controllers/ConceptsController.js","controllers/HeaderController.js","controllers/UserController.js","controllers/UsersController.js","models/auth.js","models/backend.js","models/concept.js","models/concepts.js","models/state.js","models/user.js"],"names":["angular","module","constant","views","id","name","label","filters","value","graphOption","languages","config","$stateProvider","$urlRouterProvider","$locationProvider","$logProvider","hotkeysProvider","debugEnabled","includeCheatSheet","defaultView","urimap","^REAL([0-9]+)$","tplVersion","state","url","templateUrl","needsPermission","controller","$stateParams","view","resolve","concept","Concepts","StateService","setView","uri","Object","keys","forEach","k","m","match","setConcept","getByUri","add","users","$http","method","params","action","user","User","get","returnTo","html5Mode","run","$rootScope","$location","$state","Auth","$on","event","toState","toParams","console","log","hasPermission","preventDefault","href","isLoggedIn","go","username","directive","restrict","replace","scope","items","originalItems","lang","disabled","link","element","attrs","bind","keydown","evt","keyCode","push","$li","$","target","parent","$lis","children","length","$next","next","find","focus","setCurrentTerm","idx","index","term","setTerm","markReviewed","window","alert","html","hotkeys","filterobj","concepts","busy","totalCount","count","bindTo","combo","description","callback","selectConcept","show","this","currentConcept","getConcept","checkScrollPos","y","first","height","indexOf","ctop","cbottom","wtop","scrollTop","wbottom","graphOptionEnabled","select","submit","filterString","query","local","q","join","fetch","then","setTimeout","err","error","Backend","transclude","data","originalData","readonly","cont","$parent","dirty","confirm","reload","$term","$terms","prev","$scope","encodeURIComponent","$window","$log","$timeout","setFocus","field","categories","categoryLabels","http://data.ub.uio.no/realfagstermer/cat_1","http://data.ub.uio.no/realfagstermer/cat_2","http://data.ub.uio.no/realfagstermer/cat_3","http://data.ub.uio.no/realfagstermer/cat_4","http://data.ub.uio.no/realfagstermer/cat_5","http://data.ub.uio.no/realfagstermer/cat_6","http://data.ub.uio.no/realfagstermer/cat_7","http://data.ub.uio.no/realfagstermer/cat_8","http://data.ub.uio.no/realfagstermer/cat_9","selectWikipediaResult","loadCandidate","title","originalObject","isRecommended","recommended","isLoaded","$watch","c","p","testDirty","store","storeAndGo","debug","load","keyboardModifier","navigator","platform","allowIn","open","katapiUrl","i","selectedView","split","filterKeys","map","x","f","undefined","selectedLanguages","getView","menuAvailable","toggleMenu","toggleClass","e","service","$cookieStore","currentUser","permission","that","created","getRequest","response","postRequest","getUser","opts","getUsers","getConcepts","cursor","filter","putConcept","searchWikipedia","searchWikidata","getWikipedia","getWikidata","factory","$q","$sce","Concept","loading","wpWorking","saving","saved","status","candidates","selectedCandidate","libCodeMapping","ns","na","nf","nb","nc","ne","nk","ni","nm","ngh","prototype","constructor","setData","editorialNote","altLabel","lng","prefLabel","ensureBlankFields","generateHints","oldLabel","copy","$broadcast","subject","body","githubUrl","setSelectedCandidate","wikidataItem","toggleCategory","catUri","member","splice","equals","nn","hints","Math","min","loadCandidateByUri","text","trustAsHtml","ids","s","slice","message","force","deferred","defer","libCode","reject","promise","toJson","JSON","stringify","currentFilter","results","getById","reduce","sort","a","b","localeCompare","currentConceptIdx","n","getTerm"],"mappings":"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","file":"app.min.js","sourcesContent":["\n/**\n * Config\n */\nangular.module('app.config', [])\n  .constant('config', {\n    views: [\n      {id: 1, name: 'default', label: 'Standard'},\n      {id: 2, name: 'nn', label: 'Omsetjing til nynorsk'},\n      {id: 3, name: 'mapping', label: 'Engelsk + kategorisering + wikidata'},\n      {id: 4, name: 'se', label: 'Oversetting til nordsamisk'},\n    ],\n    filters: [\n      { value:'', label:'(intet filter)' },\n      { value: 'has:unverified', label: 'Ikke korrekturlest' },\n      { value: 'exists:prefLabel@nn', label: 'Har språk:nynorsk', graphOption: true },\n      { value: '-exists:prefLabel@nn', label: 'Mangler språk:nynorsk' },\n      { value: 'exists:prefLabel@en', label: 'Har språk:engelsk', graphOption: true },\n      { value: '-exists:prefLabel@en', label: 'Mangler språk:engelsk' },\n      { value: 'exists:prefLabel@se', label: 'Har språk:nordsamisk', graphOption: true },\n      { value: '-exists:prefLabel@se', label: 'Mangler språk:nordsamisk' },\n      { value: 'has:editorialNote', label: 'Har noter', graphOption: true },\n      { value: 'has:wikidataItem', label: 'Har wikidata-mapping', graphOption: true }\n     ],\n    languages: ['nb', 'nn', 'en', 'la', 'se']\n  });\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app', ['ngSanitize',\n                       'vs-repeat',\n                       'cfp.hotkeys',\n                       'ui.router',\n                       '720kb.tooltips',\n                       'angucomplete-alt',\n\n                       'app.config',\n                       'app.controllers.header',\n                       'app.controllers.user',\n                       'app.controllers.users',\n                       'app.controllers.concept',\n                       'app.controllers.concepts',\n                       'app.controllers.auth',\n \n                       'app.services.user',\n                       'app.services.backend',\n                       'app.services.auth',\n                       'app.services.concepts',\n                       'app.services.concept',\n                       'app.services.state',\n\n                       'app.directives.altlabels',\n                       'app.directives.conceptnav'])\n\n\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', '$logProvider', 'hotkeysProvider', function($stateProvider, $urlRouterProvider, $locationProvider, $logProvider, hotkeysProvider) {\n  'use strict';\n\n  $logProvider.debugEnabled(true);\n  hotkeysProvider.includeCheatSheet = true;\n\n\n  var defaultView = 'nn';\n\n  // For any unmatched url, redirect to /\n  //$urlRouterProvider.otherwise('/concepts');\n\n  var urimap = {\n    '^REAL([0-9]+)$': 'http://data.ub.uio.no/realfagstermer/c'\n  };\n\n  var tplVersion = '?ver=2';  // Increase to purge cache\n\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'partials/home.html' + tplVersion\n    })\n    .state('concepts', {\n      url: '/concepts?q',\n      templateUrl: 'partials/concepts.html' + tplVersion,\n      needsPermission: 'edit',\n      controller: 'ConceptsController'\n    })\n    .state('concepts.concept', {\n      needsPermission: 'edit',\n      url: '/:id?view',\n      templateUrl: function ($stateParams) {\n        return '/partials/concept.' + ($stateParams.view ? $stateParams.view : defaultView) + '.html' + tplVersion;\n      },\n      controller: 'ConceptController',\n      resolve: {\n        // An optional map of dependencies which should be injected into the controller. \n        // If any of these dependencies are promises, the router will wait for them all\n        // to be resolved or one to be rejected before the controller is instantiated.\n        concept: ['$stateParams', 'Concepts', 'StateService', function ($stateParams, Concepts, StateService) {\n          var id = $stateParams.id;\n\n          StateService.setView($stateParams.view ? $stateParams.view : defaultView);\n\n          var uri;\n          Object.keys(urimap).forEach(function(k) {\n            var m = id.match(k);\n            if (m) uri = urimap[k] + m[1];\n          });\n          if (!uri) {\n            StateService.setConcept(null);\n            return;\n          }\n\n          var concept = Concepts.getByUri(uri);\n          if (!concept) {\n            concept = Concepts.add(id, uri);\n          }\n          // console.log(concept);\n          StateService.setConcept(concept);\n          return concept;\n          // return Concepts.get([{id: $stateParams.id}]); // Returns promise\n          // return Concepts.getByUri(uri); // returns promise\n        }]\n      }\n    })\n    .state('users', {\n      url: '/users',\n      templateUrl: 'partials/users.html' + tplVersion,\n      controller: 'UsersController',\n      needsPermission: 'edit',\n      resolve: {\n        users: ['$http', function($http) {\n          return $http({ method: 'GET', url: 'api.php', params: {action: 'get_users'} });\n        }]\n      }\n    })\n    .state('user', {\n      url: '/users/:id',\n      templateUrl: 'partials/user.html' + tplVersion,\n      controller: 'UserController',\n      needsPermission: 'view',\n      resolve: {\n        user: ['$stateParams', 'User', function($stateParams, User) {\n          return User.get($stateParams.id);\n        }]\n      }\n    })\n    .state('auth', {\n      url: '/auth?returnTo',\n      templateUrl: 'partials/auth.html' + tplVersion,\n      controller: 'AuthController',\n      resolve: {\n        returnTo: ['$stateParams', function($stateParams) {\n          return $stateParams.returnTo;\n        }]\n      }\n    }) ;\n\n  // use the HTML5 History API\n  $locationProvider.html5Mode(true);\n\n}])\n\n.run(['$rootScope', '$location', '$state', 'Auth', function ($rootScope, $location, $state, Auth) {\n  'use strict';\n\n    $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {\n      console.log('$stateChangeStart: has \"' + toState.needsPermission + '\" permission ? ' + (Auth.hasPermission(toState.needsPermission) ? 'yes' : 'no'));\n      if (!Auth.hasPermission(toState.needsPermission)) {\n        event.preventDefault();\n        var url = $state.href(toState, toParams);\n        if (Auth.isLoggedIn()) {\n          $state.go('user', { id: Auth.user.username[0] });\n        } else {\n          $state.go('auth', { returnTo: url });\n        }\n      }\n    });\n\n}]);\n","// Declare app level module which depends on filters, and services\nangular.module('app.directives.altlabels', ['app.services.state'])\n\n.directive('altlabels', ['StateService', function (StateService) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/altlabels.html',\n    replace: false,\n    scope: { items: '=', originalItems: '=', lang: '@', disabled: '@' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        // console.log(evt);\n        if (evt.keyCode === 13) { // Enter\n          scope.items.push({value:''});\n        }\n        if (evt.keyCode === 40) {\n          // Down\n          var $li = $(evt.target).parent();\n          var $lis = $li.parent().children('li');\n          if ($lis.length <= 1) return;\n          var $next = $li.next('li');\n          //console.log($next);\n          if ($next.length === 0) $next = $($lis[0]);\n          $next.find('input').focus();\n          //console.log($next.find('input').val());\n        }\n        if (evt.keyCode === 38) {\n          // Up\n        }\n      };\n\n      scope.setCurrentTerm = function(evt) {\n        var $li = $(evt.target).parent();\n        var idx = $li.parent().children('li').index($li);\n        var term = scope.items[idx];\n        StateService.setTerm(term);\n      };\n\n      scope.markReviewed = function(uri) {\n        console.log('Mark reviewed: ' + uri);\n        window.alert('not implemented');\n      };\n\n      function bind(lang, items) {\n        // ?\n      }\n      /*if (attrs.disabled) {\n        scope.disabled = true;\n      }*/\n\n      if (attrs.items) {\n        bind(attrs.lang, attrs.items);\n      } else {\n        element.html('<em>No items provided</em>');\n      }\n\n    }\n  };\n}]);","// Declare app level module which depends on filters, and services\nangular.module('app.directives.conceptnav', ['app.config', 'app.services.concepts', 'app.services.state'])\n\n.directive('conceptnav', ['$state', '$location', 'hotkeys', 'StateService', 'Concepts', 'config', function ($state, $location, hotkeys, StateService, Concepts, config) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    templateUrl: '/partials/conceptnav.html',\n    replace: false,\n    scope: {\n      'filterobj': '='  // Two-way data binding\n    },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n      console.log('>>> Linking conceptnav');\n      scope.filters = config.filters;\n      scope.concepts = [];\n      scope.busy = true;\n      scope.totalCount = Concepts.count;\n\n      hotkeys.bindTo(scope)\n      .add({\n        combo: '/',\n        description: 'Søk',\n        callback: function(event, hotkey) {\n          event.preventDefault();\n          $('.conceptnav input:text').focus();\n        }\n      });\n\n      function conceptListUpdated() {\n        console.log('conceptListUpdated');\n      }\n\n      scope.selectConcept = function() {\n        // console.log(this.concept);\n        Concepts.show(this.concept);\n      };\n\n      scope.currentConcept = StateService.getConcept();\n\n      scope.checkScrollPos = function(concept) {\n        // All elements have the same height since we are using angular-vs-repeat\n        var y = $('.scrollerwrapper').children().first().height(),\n            idx = scope.concepts.indexOf(concept),\n            ctop = idx * y,\n            cbottom = ctop + y,\n            wtop = $('.scrollerwrapper').scrollTop(),\n            wbottom = wtop + $('.scrollerwrapper').height();\n\n        if (idx === -1) return; \n        if (!concept) return; \n\n        if (cbottom >= wbottom) {\n          $('.scrollerwrapper').scrollTop( cbottom - $('.scrollerwrapper').height() );\n        } else if (ctop <= wtop) {\n          $('.scrollerwrapper').scrollTop( ctop );\n        }\n      };\n\n      scope.$on('conceptChanged', function(evt, concept) {\n        scope.currentConcept = concept;\n        // TODO: FIX! This broke with the latest Angular.\n        // scope.checkScrollPos(concept);\n      });\n\n      scope.graphOptionEnabled = function() {\n        return scope.filterobj.select && scope.filterobj.select.graphOption;\n      };\n\n      scope.submit = function() {\n        var filterString = [];\n        if (scope.filterobj.query) filterString.push(scope.filterobj.query);\n        if (scope.filterobj.select) filterString.push(scope.filterobj.select.value);\n        if (scope.graphOptionEnabled() && scope.filterobj.local) filterString.push('graph:local');\n        console.log(filterString);\n\n        $state.go('concepts.concept', {q: filterString.join(',')});\n      };\n\n      var q = [];\n      if (scope.filterobj.query) {\n        q.push(scope.filterobj.query);\n      }\n      if (scope.filterobj.select) {\n        q.push(scope.filterobj.select.value);\n      }\n      if (scope.filterobj.local) {\n        q.push('graph:local');\n      }\n\n      q = q.join(',');\n      console.log(q);\n      if (!Concepts.busy) {\n        scope.busy = true;\n        Concepts.fetch(q).then(function(concepts) {\n          scope.concepts = concepts;\n          scope.totalCount = Concepts.count;\n          scope.busy = false;\n          setTimeout(function() {\n            scope.checkScrollPos(scope.currentConcept);\n          });\n        }).catch(function(err) {\n          scope.concepts = [];\n          scope.totalCount = 0;\n          scope.error = err;\n          scope.busy = false;\n        });\n      }\n    }\n  };\n}]);\n","// Declare app level module which depends on filters, and services\nangular.module('app.directives.term', ['app.services.state', 'app.services.backend'])\n\n.directive('term', ['StateService', 'Backend', function (StateService, Backend) {\n  'use strict';\n\n  return {\n\n    restrict : 'E',  // element names only\n    transclude: true,\n    templateUrl: '/partials/term.html',\n    replace: false,\n    scope: { data: '=', originalData: '=', readonly: '=' },\n\n    link: function(scope, element, attrs) {\n      // console.log(element);\n      // console.log(attrs);\n\n      scope.markReviewed = function() {\n        var cont = true;\n        // TODO: Something more elegant than scope.$parent ?\n        if (scope.$parent.currentConcept.dirty) {\n          cont = window.confirm('Endringer du har gjort på dette begrepet vil gå tapt. Vil du fortsette?');\n        }\n        if (!cont) return;\n        Backend.markReviewed(scope.originalData.uri).then(function(response) {\n          // TODO: Something more elegant than scope.$parent ?\n          scope.$parent.reload();  // Reload to get term URIs etc..\n        });\n      };\n\n      scope.keydown = function(evt) {\n        // console.log(this);\n        if (evt.keyCode === 13) { // Enter\n          //scope.$parent.items.push({value:''});\n        }\n        if (evt.keyCode === 40 || evt.keyCode === 38) {\n          var $term = $(evt.target).parent();\n          var $terms = $term.parent().children('term');\n          var $next;\n\n          if ($terms.length <= 1) return;\n          // Down\n          if (evt.keyCode == 40) {\n             $next = $term.next('term');\n            if ($next.length === 0) $next = $($terms[0]);\n          } else {\n            $next = $term.prev('term');\n            if ($next.length === 0) $next = $($terms[$terms.length-1]);\n          }\n          $next.find('input').focus();\n        }\n      };\n\n      scope.focus = function(evt) {\n        StateService.setTerm(scope.data);\n        $(evt.target).select();\n      };\n\n    }\n  };\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.auth', ['app.services.auth'])\n\n.controller('AuthController', ['$scope', 'Auth', 'returnTo', function($scope, Auth, returnTo) {\n  'use strict';\n\n  $scope.returnTo = window.encodeURIComponent(returnTo);\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concept', ['app.services.backend',\n                                           'app.services.auth',\n                                           'app.services.state',\n                                           'app.services.concepts'])\n\n.controller('ConceptController', ['$scope', '$window', '$log', '$timeout', 'hotkeys', 'Backend',\n                                  'Concepts', 'concept',\n                                  function($scope, $window, $log, $timeout, hotkeys, Backend, \n                                           Concepts, concept) {\n  'use strict';\n\n  if (concept) {\n    console.log('[ConceptController] Init: id=' + concept.id);\n  } else {\n    console.log('[ConceptController] Init: no concept');\n    return;\n  }\n  $scope.currentConcept = concept;\n\n  $scope.categories = [\n    'http://data.ub.uio.no/realfagstermer/cat_1',\n    'http://data.ub.uio.no/realfagstermer/cat_2',\n    'http://data.ub.uio.no/realfagstermer/cat_3',\n    'http://data.ub.uio.no/realfagstermer/cat_4',\n    'http://data.ub.uio.no/realfagstermer/cat_5',\n    'http://data.ub.uio.no/realfagstermer/cat_6',\n    'http://data.ub.uio.no/realfagstermer/cat_7',\n    'http://data.ub.uio.no/realfagstermer/cat_8',\n    'http://data.ub.uio.no/realfagstermer/cat_9',\n  ];\n\n  $scope.categoryLabels = {\n    'http://data.ub.uio.no/realfagstermer/cat_1': 'Generelt',\n    'http://data.ub.uio.no/realfagstermer/cat_2': 'Astro',\n    'http://data.ub.uio.no/realfagstermer/cat_3': 'Fysikk',\n    'http://data.ub.uio.no/realfagstermer/cat_4': 'Biologi',\n    'http://data.ub.uio.no/realfagstermer/cat_5': 'Geo',\n    'http://data.ub.uio.no/realfagstermer/cat_6': 'Farmasi',\n    'http://data.ub.uio.no/realfagstermer/cat_7': 'Kjemi',\n    'http://data.ub.uio.no/realfagstermer/cat_8': 'Informatikk',\n    'http://data.ub.uio.no/realfagstermer/cat_9': 'Matematikk',\n  };\n\n  // 'fa': None,\n  // 'ns': None,  # Fellesbibl.\n  // 'nq': None,  # Tøyen\n\n  /*\n  baMap = {\n        'ns': 'Generelt',\n        'na': 'Astro',\n        'nf': 'Fysikk',\n        'nb': 'Biologi',\n        'nc': 'Geo',\n        'ne': 'Farmasi',\n        'nk': 'Kjemi',\n        'ni': 'Informatikk',\n        'nm': 'Matematikk',\n        'ngh': 'Geo',\n        'fa': None,\n        'ns': None,  # Fellesbibl.\n        'nq': None,  # Tøyen\n    }*/\n\n  $scope.selectWikipediaResult = function(q) {\n    if (q) {\n      console.log(q);\n      $scope.currentConcept.loadCandidate(q.title, true, q.originalObject.lang);\n    }\n  };\n\n  $scope.isRecommended = function(uri) {\n    return $scope.currentConcept && $scope.currentConcept.recommended && ~$scope.currentConcept.recommended.indexOf(uri);\n  };\n\n  //-\n  // Focus first edit field once available\n  //-\n\n  function setFocus () {\n    $timeout(function() {\n      var field = angular.element('.main input[type=\"text\"]:enabled');\n      if (field.length) field[0].focus();\n    }, 0);\n  }\n\n  if (concept.isLoaded()) {\n    setFocus();\n  }\n  $scope.$on('conceptLoaded', function(e, user) {\n    setFocus();\n  });\n\n  //-\n  // Test dirtyness on data change\n  //-\n\n  $scope.$watch('currentConcept.data', function(c, p) {\n    if (!p || !c) return;\n    if (p.uri != c.uri) return;\n    $scope.currentConcept.testDirty();\n  }, true);\n\n  //-\n  // Store\n  //-\n\n  $scope.store = function() {\n    if ($scope.currentConcept.dirty) {\n      $scope.currentConcept.store();\n    }\n  };\n\n  $scope.storeAndGo = function() {\n    $scope.store();\n    Concepts.next();\n  };\n\n  $scope.reload = function() {\n    $log.debug('[main] Reload concept');\n    $scope.currentConcept.load(true);\n  };\n\n\n  //-\n  // Keyboard shortcuts\n  //-\n\n  // when you bind it to the controller's scope, it will automatically unbind\n  // the hotkey when the scope is destroyed (due to ng-if or something that changes the DOM)\n  \n  var keyboardModifier = 'alt';\n  if (navigator.platform == 'MacIntel') {\n    keyboardModifier = 'shift+alt';\n  }\n\n  hotkeys.bindTo($scope)\n    .add({\n      combo: keyboardModifier + '+s',\n      description: 'Lagre og hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        $scope.storeAndGo();\n      },\n      allowIn: ['INPUT']\n    })\n    // .add({\n    //   combo: keyboardModifier + '+s',\n    //   description: 'Lagre',\n    //   callback: function(event, hotkey) {\n    //     event.preventDefault();\n    //     $scope.store();\n    //   },\n    //   allowIn: ['INPUT']\n    // })\n    .add({\n      combo: keyboardModifier + '+down',\n      description: 'Hopp til neste',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.next();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+up',\n      description: 'Hopp til forrige',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        Concepts.prev();\n      },\n      allowIn: ['INPUT']\n    })\n    .add({\n      combo: keyboardModifier + '+k',\n      description: 'Vis katalogposter',\n      callback: function(event, hotkey) {\n        event.preventDefault();\n        window.open($scope.currentConcept.katapiUrl, 'katapi');\n      },\n      allowIn: ['INPUT']\n    });\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.concepts', ['app.config', 'app.services.backend'])\n\n.controller('ConceptsController', ['$scope', '$state', '$stateParams', 'Backend', 'StateService', 'config',\n                                  function($scope, $state, $stateParams, Backend, StateService, config) {\n  'use strict';\n\n  console.log('-- ConceptsController --');\n  // console.log($stateParams);\n\n  $scope.filterobj = {};\n  if ($stateParams.q) {\n    $stateParams.q.split(',').forEach(function(p) {\n      var filterKeys = config.filters.map(function(x) { return x.value; });\n      var f = config.filters[filterKeys.indexOf(p)];\n      if (f !== undefined) {\n        $scope.filterobj.select = f;\n      } else if (p.match('(graph:local)')) {\n        $scope.filterobj.local = true;\n      } else {\n        $scope.filterobj.query = p;\n      }\n    });\n  }\n  if (!$scope.filterobj.select) {\n    $scope.filterobj.select = config.filters[0];\n  }\n\n  $scope.selectedLanguages = config.languages;\n  $scope.views = config.views;\n\n  function setView(view) {\n    if (!view) return;\n    for (var i = $scope.views.length - 1; i >= 0; i--) {\n      if ($scope.views[i].name == view) {\n        $scope.selectedView = $scope.views[i];\n        break;\n      }\n    }\n  }\n\n  setView(StateService.getView());\n\n  $scope.$on('viewChanged', function(evt, view) {\n    setView(view);\n  });\n\n  $scope.$watch('selectedView', function(c, p) {\n    if (!p || !c) return;\n    if (p == c) return;\n\n    $state.go('concepts.concept', { view: c.name });\n\n  });\n\n  $scope.currentConcept = StateService.getConcept();\n\n  $scope.$on('conceptChanged', function(evt, concept) {\n    console.log('[ConceptsController] Concept changed: ');\n    console.log(concept);\n    $scope.currentConcept = concept;\n  });\n\n}]);","/**\n * HeaderController\n */\nangular.module('app.controllers.header', ['app.services.auth'])\n\n.controller('HeaderController', ['$scope', 'Auth', function($scope, Auth){\n  'use strict';\n\n  // TODO: Use Stateservice to determine?\n  $scope.menuAvailable = true;\n\n  $scope.toggleMenu = function() {\n    angular.element('body').toggleClass('menuVisible');\n  };\n\n  $scope.user = Auth.user;\n  $scope.$on('userChanged', function(e, user) {\n    $scope.user = user;\n  });\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.user', ['app.services.auth'])\n\n.controller('UserController', ['$scope', 'user', function($scope, user) {\n  'use strict';\n\n  console.log(user);\n  $scope.user = user.data.user;\n\n}]);"," \n// Declare app level module which depends on filters, and services\nangular.module('app.controllers.users', ['app.services.backend',\n                                        'app.services.auth',\n                                        'app.services.state',\n                                        'app.services.concepts'])\n\n.controller('UsersController', ['$scope', 'users', function($scope, users) {\n  'use strict';\n\n  console.log(users);\n\n  $scope.users = users.data.users;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.auth', ['ngCookies', 'app.services.backend'])\n\n.service('Auth', ['$rootScope', '$cookieStore', function($rootScope, $cookieStore) {\n  'use strict';\n\n  var currentUser = $cookieStore.get('user') || { username: '', permission: [] };\n\n  this.user = currentUser;\n  var that = this;\n\n  this.hasPermission = function(permission) {\n    if (!permission) return true;\n    if (permission == 'view') return that.isLoggedIn();\n    return that.user.permission.indexOf(permission) != -1 ? true : false;\n  };\n\n  this.isLoggedIn = function(user) {\n    if(user === undefined)\n        user = that.user;\n    return user.created;\n  };\n\n  this.user = currentUser;\n\n}]);","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.backend', [])\n\n.service('Backend', ['$rootScope', '$http', function($rootScope, $http) {\n  'use strict';\n  // console.log('Backend init');\n\n  function getRequest(method, params) {\n    if (!params) params = {};\n    params.action = method;\n    return $http({\n      method: 'GET',\n      url: 'api.php',\n      params: params\n    }).then(function(response) {\n      return response.data;\n    });\n  }\n\n  function postRequest(method, data) {\n    if (!data) data = {};\n    data.action = method;\n    return $http({\n      method: 'POST',\n      url: 'api.php',\n      data: data\n    });\n  }\n\n  this.getUser = function(id) {\n    var opts = {};\n    if (id) opts.id = id;\n    return getRequest('get_user', opts);\n  };\n\n  this.getUsers = function() {\n    return getRequest('get_users');\n  };\n\n  this.getConcepts = function(cursor, filter) {\n    return getRequest('get_concepts', {cursor: cursor, filter: filter});\n  };\n\n  this.getConcept = function(uri) {\n    return getRequest('get_concept', {uri: uri});\n  };\n\n  this.putConcept = function(data) {\n    return postRequest('put_concept', {data: data});\n  };\n\n  this.markReviewed = function(uri) {\n    return postRequest('mark_reviewed', {uri: uri});\n  };\n\n  this.searchWikipedia = function(term) {\n    var opts = {term: term};\n    return getRequest('search_wikipedia', opts);\n  };\n\n  this.searchWikidata = function(term) {\n    var opts = {term: term};\n    return getRequest('search_wikidata', opts);\n  };\n\n  this.getWikipedia = function(term, lang) {\n    var opts = {term: term, lang: lang};\n    return getRequest('get_wikipedia', opts);\n  };\n\n  this.getWikidata = function(uri) {\n    var opts = {uri: uri};\n    return getRequest('get_wikidata', opts);\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.concept', ['app.config', 'app.services.backend', 'app.directives.altlabels', 'app.directives.term'])\n\n.factory('Concept', ['$q', '$rootScope', '$timeout', '$sce', 'Backend', 'config', function($q, $rootScope, $timeout, $sce, Backend, config) {\n  'use strict';\n\n  var libCodeMapping = {\n    'ns': 'http://data.ub.uio.no/realfagstermer/cat_1',\n    'na': 'http://data.ub.uio.no/realfagstermer/cat_2',\n    'nf': 'http://data.ub.uio.no/realfagstermer/cat_3',\n    'nb': 'http://data.ub.uio.no/realfagstermer/cat_4',\n    'nc': 'http://data.ub.uio.no/realfagstermer/cat_5',\n    'ne': 'http://data.ub.uio.no/realfagstermer/cat_6',\n    'nk': 'http://data.ub.uio.no/realfagstermer/cat_7',\n    'ni': 'http://data.ub.uio.no/realfagstermer/cat_8',\n    'nm': 'http://data.ub.uio.no/realfagstermer/cat_9',\n    'ngh': 'http://data.ub.uio.no/realfagstermer/cat_5',  // ???\n  };\n\n  function Concept(id, uri, label) {\n    var that = this;\n    that.dirty = false;\n    that.loading = false;\n    that.wpWorking = false;\n    that.saving = false;\n    that.saved = false;\n    that.error = null;\n    that.id = id;\n    that.uri = uri;\n    that.label = label;\n    that.status = 'minimal';  // 'complete', 'saving', 'saved'\n    that.data = null;\n    that.candidates = [];\n    that.selectedCandidate = -1;\n    that.recommended = [];\n  }\n\n  Concept.prototype = {\n\n    constructor: Concept,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      // If no (editable) editorialNote field, create one\n      if (!data.editorialNote) {\n        data.editorialNote = [{ value: '' }];\n      } else if (data.editorialNote[0].readonly) {\n        data.editorialNote.push({ value: '' });        \n      }\n\n      if (!data.altLabel || !Object.keys(data.altLabel).length) data.altLabel = {};\n      config.languages.forEach(function(lng) {\n        // There should be at least one text field, so we add\n        // one if there are none.\n        if (!data.prefLabel[lng]) data.prefLabel[lng] = [{ value: '' }];\n        if (!data.altLabel[lng]) data.altLabel[lng] = [{ value: '' }];\n      });\n      this.ensureBlankFields(data);\n      this.generateHints(data);\n\n      var oldLabel = this.label;\n      this.label = data.prefLabel.nb[0].value;\n      this.data = data;\n      this.originalData = angular.copy(data);\n      if (oldLabel != this.label) {\n        $rootScope.$broadcast('conceptLabelChanged', this);\n      }\n\n      var subject = encodeURIComponent(this.label);\n      this.katapiUrl = 'https://app.uio.no/ub/emnesok/realfagstermer/search?term=' + this.label;\n      var body = encodeURIComponent('\\n\\n\\n\\n--\\nURI: ' + this.uri + '\\nBruk: ' + this.katapiUrl);\n      this.githubUrl = 'https://github.com/realfagstermer/realfagstermer/issues/new?title=' + subject + '&body=' + body;\n    },\n\n    setSelectedCandidate: function(idx) {\n      this.selectedCandidate = (this.selectedCandidate == idx) ? -1 : idx ;\n      if (this.selectedCandidate == -1) {\n        this.data.wikidataItem = [];\n      } else {\n        this.data.wikidataItem = [this.candidates[this.selectedCandidate].uri];\n      }\n    },\n\n    toggleCategory: function(catUri) {\n      if (~this.data.member.indexOf(catUri)) {\n        this.data.member.splice(this.data.member.indexOf(catUri), 1);\n      } else {\n        this.data.member.push(catUri);\n      }\n    },\n\n    testDirty: function() {\n      this.dirty = ! angular.equals(this.data, this.originalData);\n      // if (this.dirty) this.saved = false;\n      this.ensureBlankFields(this.data);\n    },\n\n    generateHints: function(data) {\n      var m;\n\n      data.prefLabel.nn[0].hints = [];\n      if (data.prefLabel.nb[0].value) {\n        data.prefLabel.nn[0].hints.push(data.prefLabel.nb[0].value);\n      }\n      m = data.prefLabel.nb[0].value.match('^(.*)er$');\n      if (m) {\n        data.prefLabel.nn[0].hints.push(m[1] + 'ar');\n      }\n      for (var i = 0; i < Math.min(data.altLabel.nn.length, data.altLabel.nb.length); i++) {\n        data.altLabel.nn[i].hints = [];\n        if (data.altLabel.nb[i].value) {\n          data.altLabel.nn[i].hints.push(data.altLabel.nb[i].value);\n        }\n        m = data.altLabel.nb[i].value.match('^(.*)er$');\n        if (m) {\n          data.altLabel.nn[i].hints.push(m[1] + 'ar');\n        }\n      }\n    },\n\n    loadCandidateByUri: function(uri) {\n      var that = this;\n      that.wpWorking = true;\n\n      Backend.getWikidata(uri).then(function(data) {\n        if (data.title) {\n          data.text = $sce.trustAsHtml(data.text);\n          var ids = that.candidates.map(function(s){ return s.id; });\n          if (ids.indexOf(data.id) == -1) {\n            that.candidates.push(data);\n          }\n        }\n        that.wpWorking = false;\n        that.selectedCandidate = 0;\n      }, function() {\n        alert('FAIL!');\n        that.wpWorking = false;\n      });\n    },\n\n    loadCandidate: function(term, select, lang) {\n      var that = this;\n      that.wpWorking = true;\n\n      Backend.getWikipedia(term, lang).then(function(data) {\n        if (data.title) {\n          data.text = $sce.trustAsHtml(data.text);\n          var ids = that.candidates.map(function(s){ return s.id; });\n          if (ids.indexOf(data.id) == -1) {\n            that.candidates.push(data);\n            if (select) {\n              that.setSelectedCandidate(that.candidates.length - 1);\n            }\n          }\n        }\n        that.wpWorking = false;\n      }, function() {\n        alert('FAIL!');\n        that.wpWorking = false;\n      });\n    },\n\n    /**\n     * Make sure there is always one blank field at the end of the term list to add new data to\n     * for each language\n     */\n    ensureBlankFields: function(data) {\n      var that = this;\n      config.languages.forEach(function(lng) {\n\n        // There should be at least one text field, so we add\n        // one if there are none.\n        \n        if (data.altLabel[lng].length === 0 || data.altLabel[lng][data.altLabel[lng].length - 1].value !== '') {\n          data.altLabel[lng].push({ value: '' });\n          that.generateHints(data);\n        }\n\n        if (data.altLabel[lng].length >= 2 && data.altLabel[lng][data.altLabel[lng].length - 1].value === '' && data.altLabel[lng][data.altLabel[lng].length - 2].value === '') {\n          data.altLabel[lng] = data.altLabel[lng].slice(0, data.altLabel[lng].length - 1);\n        }\n\n      });\n    },\n\n    store: function() {\n      var that = this;\n      that.error = '';\n      that.saved = false;\n      that.dirty = false;\n      this.saving = true;\n      Backend.putConcept(this.data).then(function(response) {\n        that.saving = false;\n        console.log(response);\n        if (!response.data.status) {\n          that.error = response.data;\n          window.alert('Save failed, see concept for more info.');\n          return;\n        }\n        if (response.data.status != 'success') {\n          if (response.data.status == 'edit_conflict') {\n            that.error = 'Redigeringskonflikt: Begrepet har blitt endret på serveren siden du begynte å redigere. Kopier ulagrede endringer og trykk så \"Tilbakestill\" (eller last siden på nytt) for å hente inn det oppdaterte begrepet.';\n            window.alert('Redigeringskonflikt, endringene dine har ikke blitt lagret.');\n          } else if (response.data.status == 'no_permission') {\n            that.error = 'Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.';\n            window.alert('Beklager, du har ikke redigeringstilgang. Hvis du nettopp har registrert deg må du vente på at kontoen blir godkjent.');\n          } else {\n            that.error = response.data.status;\n            window.alert('Save failed, see concept for more info.');\n          }\n          return;\n        }\n        that.saved = true;\n        that.load(true);  // Reload to get term URIs etc..\n      }).catch(function(err) {\n        that.saving = false;\n        console.log(err);\n        that.error = 'Invalid response received: ' + err.message;\n        window.alert('Save failed!');\n      });\n    },\n\n    load: function(force) {\n      var that = this,\n          deferred = $q.defer();\n\n      if (this.data && !force) {\n        $timeout(function() {\n          deferred.resolve();\n        }, 0);\n      } else {\n        this.loading = true;\n\n        Backend.getConcept(this.uri).then(function(data) {\n          that.loading = false;\n          if (!data.concept) {\n            if (data.error) {\n              that.error = data.error;\n            } else {\n              that.error = data;\n            }\n            deferred.reject();\n            return;\n          }\n          that.setData(data.concept);\n          that.error = null;\n          console.log('[Concept] Concept loaded: ' + data.concept.uri);\n          console.log(that.data);\n\n          that.recommended = that.data.libCode.map(function(k) {\n            return libCodeMapping[k];\n          });\n\n          that.candidates = [];\n          if (that.data.wikidataItem && that.data.wikidataItem.length) {\n            that.loadCandidateByUri(that.data.wikidataItem[0]);\n          } else {\n            that.loadCandidate(that.data.prefLabel.nb[0].value);\n          }\n\n\n          $rootScope.$broadcast('conceptLoaded', that);\n          deferred.resolve();\n        }, function() {\n          that.loading = false;\n          that.error = 'Load failed. Server or network problems.';\n          deferred.reject();\n        });\n\n      }\n      return deferred.promise;\n    },\n\n    toJson: function() {\n      var data = {},\n          that = this;\n      Object.keys(this).forEach(function(x) {\n        if (x == 'originalData') return;\n        data[x] = that[x];\n      });\n      return JSON.stringify(data);\n    }\n\n  };\n\n  return Concept;\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.concepts', ['app.services.backend', 'app.services.concept'])\n\n.service('Concepts', ['$rootScope', '$q', '$timeout', '$state', 'Backend', 'Concept', function($rootScope, $q, $timeout, $state, Backend, Concept) {\n  'use strict';\n\n  var that = this;\n  var currentConcept = null;\n  var currentFilter = null;\n\n  this.busy = false;\n  this.concepts = [];\n  this.cursor = 0;\n  this.count = 0;\n\n  $rootScope.$on('conceptChanged', function(evt, concept) {\n    currentConcept = concept;\n    if (!currentConcept.data) {\n      currentConcept.load();\n    }\n  });\n\n  $rootScope.$on('conceptLabelChanged', function(evt, concept) {\n    console.log('Label changed, re-sort list');\n//    that.sort();\n  });\n\n  this.fetch = function(filter) {\n    if (that.busy) return;\n    var deferred = $q.defer();\n\n    if (filter != currentFilter) {\n      that.concepts = [];\n      currentFilter = filter;\n    }\n\n    console.log('[Concepts] fetchConcepts');\n\n    that.busy = true;\n    Backend.getConcepts(that.cursor, filter).then(function(results) {\n      that.busy = false;\n      if (!results.concepts) {\n        console.log('[Concepts] Fetch failed!');\n        that.count = 0;\n        that.concepts = [];\n        deferred.reject(results);\n        return;\n      }\n      that.count = results.count;\n      if (that.count != that.concepts.length) {\n        that.concepts = [];\n      }\n      that.cursor = results.cursor;\n\n      results.concepts.forEach(function(concept, idx) {\n        var n = that.cursor + idx;\n        //that.concepts[n] = new Concept(concept.id, concept.uri, concept.label);\n        if (!that.getByUri(concept.uri)) {\n\n          if (currentConcept && currentConcept.uri == concept.uri) {\n            that.concepts.push(currentConcept);\n          } else {\n            that.concepts.push(new Concept(concept.id, concept.uri, concept.label));\n          }\n\n        }\n      });\n\n      //that.sort();\n      console.log('[Concepts] Fetched');\n      $rootScope.$broadcast('loadedConcepts', that.concepts);\n      deferred.resolve(that.concepts);\n    });\n    return deferred.promise;\n  };\n\n  this.getConcepts = function() {\n    return that.concepts;\n  };\n\n  this.getById = function(id) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.id == id) return c; else return p;\n    }, null);\n  };\n\n  this.getByUri = function(uri) {\n    return that.concepts.reduce(function(p, c) {\n      if (c.uri == uri) return c; else return p;\n    }, null);\n  };\n\n  this.sort = function() {\n    // console.log('[Concepts] Sort');\n    that.concepts.sort(function(a,b) {\n      return a.label.localeCompare(b.label);\n    });\n  };\n\n  this.add = function(id, uri) {\n    console.log('[Concepts] Add <' + uri + '> to the current list of ' + that.concepts.length + ' concepts.');\n    var concept = new Concept(id, uri, '(...)');\n    that.concepts.push(concept);\n    return concept;\n  };\n\n  this.show = function(concept) {\n    $state.go('concepts.concept', { id: concept.id });\n  };\n\n  this.next = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    if (currentConceptIdx == -1) {\n      console.log('Current concept is not part of the current concept list');\n      return;\n    }\n    var n = currentConceptIdx + 1;\n    if (n > that.concepts.length - 1) n = 0;\n\n    // Preload n + 2\n    if (that.concepts[n + 1]) {\n      if (!that.concepts[n + 1].data) {\n        console.log('>>> Preloading n + 2');\n        that.concepts[n + 1].load();\n      }\n    }\n\n    // Goto n + 1\n    that.show(that.concepts[n]);\n  };\n\n  this.prev = function() {\n    var currentConceptIdx = that.concepts.indexOf(currentConcept);\n    if (currentConceptIdx == -1) {\n      console.log('Current concept is not part of the current concept list');\n      return;\n    }\n    var n = currentConceptIdx - 1;\n    if (n < 0) n = that.concepts.length - 1;\n    that.show(that.concepts[n]);\n  };\n\n\n}]);\n"," \n// Declare app level module which depends on filters, and services\nangular.module('app.services.state', ['app.services.concepts'])\n\n.service('StateService', ['$rootScope', 'Concepts', function($rootScope, Concepts) {\n  'use strict';\n\n  var state = {\n    concept: null,\n    term: null,\n    view: null\n  };\n\n  this.setView = function(view) {\n    if (view == state.view) return;\n    state.view = view;\n    console.log('[StateService] Set view: ' + view);\n    $rootScope.$broadcast('viewChanged', state.view);\n  };\n\n  this.getView = function() {\n    return state.view;\n  };\n\n  this.setConcept = function(concept) {\n    if (state.concept == concept) return;\n    state.concept = concept;\n    $rootScope.$broadcast('conceptChanged', state.concept);\n  };\n\n  this.getConcept = function() {\n    return state.concept;\n  };\n\n  this.setTerm = function(term) {\n    if (state.term == term) return;\n    state.term = term;\n    $rootScope.$broadcast('termChanged', state.term);\n  };\n\n  this.getTerm = function() {\n    return state.term;\n  };\n\n}]);\n","\n// Declare app level module which depends on filters, and services\nangular.module('app.services.user', ['app.services.backend'])\n\n.factory('User', ['$q', '$rootScope', '$timeout', 'Backend', function($q, $rootScope, $timeout, Backend) {\n  'use strict';\n\n  function User(id, label) {\n    var that = this;\n    that.data = null;\n  }\n\n  User.prototype = {\n\n    constructor: User,\n\n    isLoaded: function() {\n      return this.data;\n    },\n\n    setData: function(data) {\n      this.data = data;\n    }\n\n  };\n\n  User.get = function(id) {\n    var deferred = $q.defer();\n    Backend.getUser(id).then(function(data) {\n      console.log(data);\n      deferred.resolve(data);\n    });\n    return deferred.promise;\n  };\n\n  return User;\n\n}]);\n"],"sourceRoot":"/source/"}